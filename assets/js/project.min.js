!function(a, b, c, d) {
    var e = c("html"), f = c(a), g = c(b), h = c.fancybox = function() {
        h.open.apply(this, arguments);
    }, i = navigator.userAgent.match(/msie/i), j = null, k = b.createTouch !== d, l = function(a) {
        return a && a.hasOwnProperty && a instanceof c;
    }, m = function(a) {
        return a && "string" === c.type(a);
    }, n = function(a) {
        return m(a) && 0 < a.indexOf("%");
    }, o = function(a, b) {
        var c = parseInt(a, 10) || 0;
        return b && n(a) && (c *= h.getViewport()[b] / 100), Math.ceil(c);
    }, p = function(a, b) {
        return o(a, b) + "px";
    };
    c.extend(h, {
        version: "2.1.5",
        defaults: {
            padding: 15,
            margin: 20,
            width: 800,
            height: 600,
            minWidth: 100,
            minHeight: 100,
            maxWidth: 9999,
            maxHeight: 9999,
            pixelRatio: 1,
            autoSize: !0,
            autoHeight: !1,
            autoWidth: !1,
            autoResize: !0,
            autoCenter: !k,
            fitToView: !0,
            aspectRatio: !1,
            topRatio: .5,
            leftRatio: .5,
            scrolling: "auto",
            wrapCSS: "",
            arrows: !0,
            closeBtn: !0,
            closeClick: !1,
            nextClick: !1,
            mouseWheel: !0,
            autoPlay: !1,
            playSpeed: 3e3,
            preload: 3,
            modal: !1,
            loop: !0,
            ajax: {
                dataType: "html",
                headers: {
                    "X-fancyBox": !0
                }
            },
            iframe: {
                scrolling: "auto",
                preload: !0
            },
            swf: {
                wmode: "transparent",
                allowfullscreen: "true",
                allowscriptaccess: "always"
            },
            keys: {
                next: {
                    13: "left",
                    34: "up",
                    39: "left",
                    40: "up"
                },
                prev: {
                    8: "right",
                    33: "down",
                    37: "right",
                    38: "down"
                },
                close: [ 27 ],
                play: [ 32 ],
                toggle: [ 70 ]
            },
            direction: {
                next: "left",
                prev: "right"
            },
            scrollOutside: !0,
            index: 0,
            type: null,
            href: null,
            content: null,
            title: null,
            tpl: {
                wrap: '<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',
                image: '<img class="fancybox-image" src="{href}" alt="" />',
                iframe: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen' + (i ? ' allowtransparency="true"' : "") + "></iframe>",
                error: '<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',
                closeBtn: '<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',
                next: '<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',
                prev: '<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'
            },
            openEffect: "fade",
            openSpeed: 250,
            openEasing: "swing",
            openOpacity: !0,
            openMethod: "zoomIn",
            closeEffect: "fade",
            closeSpeed: 250,
            closeEasing: "swing",
            closeOpacity: !0,
            closeMethod: "zoomOut",
            nextEffect: "elastic",
            nextSpeed: 250,
            nextEasing: "swing",
            nextMethod: "changeIn",
            prevEffect: "elastic",
            prevSpeed: 250,
            prevEasing: "swing",
            prevMethod: "changeOut",
            helpers: {
                overlay: !0,
                title: !0
            },
            onCancel: c.noop,
            beforeLoad: c.noop,
            afterLoad: c.noop,
            beforeShow: c.noop,
            afterShow: c.noop,
            beforeChange: c.noop,
            beforeClose: c.noop,
            afterClose: c.noop
        },
        group: {},
        opts: {},
        previous: null,
        coming: null,
        current: null,
        isActive: !1,
        isOpen: !1,
        isOpened: !1,
        wrap: null,
        skin: null,
        outer: null,
        inner: null,
        player: {
            timer: null,
            isActive: !1
        },
        ajaxLoad: null,
        imgPreload: null,
        transitions: {},
        helpers: {},
        open: function(a, b) {
            if (a && (c.isPlainObject(b) || (b = {}), !1 !== h.close(!0))) return c.isArray(a) || (a = l(a) ? c(a).get() : [ a ]), 
            c.each(a, function(e, f) {
                var g, i, j, k, n, o = {};
                "object" === c.type(f) && (f.nodeType && (f = c(f)), l(f) ? (o = {
                    href: f.data("fancybox-href") || f.attr("href"),
                    title: c("<div/>").text(f.data("fancybox-title") || f.attr("title")).html(),
                    isDom: !0,
                    element: f
                }, c.metadata && c.extend(!0, o, f.metadata())) : o = f), g = b.href || o.href || (m(f) ? f : null), 
                i = b.title !== d ? b.title : o.title || "", k = (j = b.content || o.content) ? "html" : b.type || o.type, 
                !k && o.isDom && ((k = f.data("fancybox-type")) || (k = (k = f.prop("class").match(/fancybox\.(\w+)/)) ? k[1] : null)), 
                m(g) && (k || (h.isImage(g) ? k = "image" : h.isSWF(g) ? k = "swf" : "#" === g.charAt(0) ? k = "inline" : m(f) && (k = "html", 
                j = f)), "ajax" === k && (n = g.split(/\s+/, 2), g = n.shift(), n = n.shift())), 
                j || ("inline" === k ? g ? j = c(m(g) ? g.replace(/.*(?=#[^\s]+$)/, "") : g) : o.isDom && (j = f) : "html" === k ? j = g : k || g || !o.isDom || (k = "inline", 
                j = f)), c.extend(o, {
                    href: g,
                    type: k,
                    content: j,
                    title: i,
                    selector: n
                }), a[e] = o;
            }), h.opts = c.extend(!0, {}, h.defaults, b), b.keys !== d && (h.opts.keys = !!b.keys && c.extend({}, h.defaults.keys, b.keys)), 
            h.group = a, h._start(h.opts.index);
        },
        cancel: function() {
            var a = h.coming;
            a && !1 === h.trigger("onCancel") || (h.hideLoading(), a && (h.ajaxLoad && h.ajaxLoad.abort(), 
            h.ajaxLoad = null, h.imgPreload && (h.imgPreload.onload = h.imgPreload.onerror = null), 
            a.wrap && a.wrap.stop(!0, !0).trigger("onReset").remove(), h.coming = null, h.current || h._afterZoomOut(a)));
        },
        close: function(a) {
            h.cancel(), !1 !== h.trigger("beforeClose") && (h.unbindEvents(), h.isActive && (h.isOpen && !0 !== a ? (h.isOpen = h.isOpened = !1, 
            h.isClosing = !0, c(".fancybox-item, .fancybox-nav").remove(), h.wrap.stop(!0, !0).removeClass("fancybox-opened"), 
            h.transitions[h.current.closeMethod]()) : (c(".fancybox-wrap").stop(!0).trigger("onReset").remove(), 
            h._afterZoomOut())));
        },
        play: function(a) {
            var b = function() {
                clearTimeout(h.player.timer);
            }, c = function() {
                b(), h.current && h.player.isActive && (h.player.timer = setTimeout(h.next, h.current.playSpeed));
            }, d = function() {
                b(), g.unbind(".player"), h.player.isActive = !1, h.trigger("onPlayEnd");
            };
            !0 === a || !h.player.isActive && !1 !== a ? h.current && (h.current.loop || h.current.index < h.group.length - 1) && (h.player.isActive = !0, 
            g.bind({
                "onCancel.player beforeClose.player": d,
                "onUpdate.player": c,
                "beforeLoad.player": b
            }), c(), h.trigger("onPlayStart")) : d();
        },
        next: function(a) {
            var b = h.current;
            b && (m(a) || (a = b.direction.next), h.jumpto(b.index + 1, a, "next"));
        },
        prev: function(a) {
            var b = h.current;
            b && (m(a) || (a = b.direction.prev), h.jumpto(b.index - 1, a, "prev"));
        },
        jumpto: function(a, b, c) {
            var e = h.current;
            e && (a = o(a), h.direction = b || e.direction[a >= e.index ? "next" : "prev"], 
            h.router = c || "jumpto", e.loop && (0 > a && (a = e.group.length + a % e.group.length), 
            a %= e.group.length), e.group[a] !== d && (h.cancel(), h._start(a)));
        },
        reposition: function(a, b) {
            var d, e = h.current, f = e ? e.wrap : null;
            f && (d = h._getPosition(b), a && "scroll" === a.type ? (delete d.position, f.stop(!0, !0).animate(d, 200)) : (f.css(d), 
            e.pos = c.extend({}, e.dim, d)));
        },
        update: function(a) {
            var b = a && a.originalEvent && a.originalEvent.type, c = !b || "orientationchange" === b;
            c && (clearTimeout(j), j = null), h.isOpen && !j && (j = setTimeout(function() {
                var d = h.current;
                d && !h.isClosing && (h.wrap.removeClass("fancybox-tmp"), (c || "load" === b || "resize" === b && d.autoResize) && h._setDimension(), 
                "scroll" === b && d.canShrink || h.reposition(a), h.trigger("onUpdate"), j = null);
            }, c && !k ? 0 : 300));
        },
        toggle: function(a) {
            h.isOpen && (h.current.fitToView = "boolean" === c.type(a) ? a : !h.current.fitToView, 
            k && (h.wrap.removeAttr("style").addClass("fancybox-tmp"), h.trigger("onUpdate")), 
            h.update());
        },
        hideLoading: function() {
            g.unbind(".loading"), c("#fancybox-loading").remove();
        },
        showLoading: function() {
            var a, b;
            h.hideLoading(), a = c('<div id="fancybox-loading"><div></div></div>').click(h.cancel).appendTo("body"), 
            g.bind("keydown.loading", function(a) {
                27 === (a.which || a.keyCode) && (a.preventDefault(), h.cancel());
            }), h.defaults.fixed || (b = h.getViewport(), a.css({
                position: "absolute",
                top: .5 * b.h + b.y,
                left: .5 * b.w + b.x
            })), h.trigger("onLoading");
        },
        getViewport: function() {
            var b = h.current && h.current.locked || !1, c = {
                x: f.scrollLeft(),
                y: f.scrollTop()
            };
            return b && b.length ? (c.w = b[0].clientWidth, c.h = b[0].clientHeight) : (c.w = k && a.innerWidth ? a.innerWidth : f.width(), 
            c.h = k && a.innerHeight ? a.innerHeight : f.height()), c;
        },
        unbindEvents: function() {
            h.wrap && l(h.wrap) && h.wrap.unbind(".fb"), g.unbind(".fb"), f.unbind(".fb");
        },
        bindEvents: function() {
            var a, b = h.current;
            b && (f.bind("orientationchange.fb" + (k ? "" : " resize.fb") + (b.autoCenter && !b.locked ? " scroll.fb" : ""), h.update), 
            (a = b.keys) && g.bind("keydown.fb", function(e) {
                var f = e.which || e.keyCode, g = e.target || e.srcElement;
                if (27 === f && h.coming) return !1;
                e.ctrlKey || e.altKey || e.shiftKey || e.metaKey || g && (g.type || c(g).is("[contenteditable]")) || c.each(a, function(a, g) {
                    return 1 < b.group.length && g[f] !== d ? (h[a](g[f]), e.preventDefault(), !1) : -1 < c.inArray(f, g) ? (h[a](), 
                    e.preventDefault(), !1) : void 0;
                });
            }), c.fn.mousewheel && b.mouseWheel && h.wrap.bind("mousewheel.fb", function(a, d, e, f) {
                for (var g = c(a.target || null), i = !1; g.length && !(i || g.is(".fancybox-skin") || g.is(".fancybox-wrap")); ) i = g[0] && !(g[0].style.overflow && "hidden" === g[0].style.overflow) && (g[0].clientWidth && g[0].scrollWidth > g[0].clientWidth || g[0].clientHeight && g[0].scrollHeight > g[0].clientHeight), 
                g = c(g).parent();
                0 !== d && !i && 1 < h.group.length && !b.canShrink && (0 < f || 0 < e ? h.prev(0 < f ? "down" : "left") : (0 > f || 0 > e) && h.next(0 > f ? "up" : "right"), 
                a.preventDefault());
            }));
        },
        trigger: function(a, b) {
            var d, e = b || h.coming || h.current;
            if (e) {
                if (c.isFunction(e[a]) && (d = e[a].apply(e, Array.prototype.slice.call(arguments, 1))), 
                !1 === d) return !1;
                e.helpers && c.each(e.helpers, function(b, d) {
                    d && h.helpers[b] && c.isFunction(h.helpers[b][a]) && h.helpers[b][a](c.extend(!0, {}, h.helpers[b].defaults, d), e);
                });
            }
            g.trigger(a);
        },
        isImage: function(a) {
            return m(a) && a.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i);
        },
        isSWF: function(a) {
            return m(a) && a.match(/\.(swf)((\?|#).*)?$/i);
        },
        _start: function(a) {
            var b, d, e = {};
            if (a = o(a), !(b = h.group[a] || null)) return !1;
            if (e = c.extend(!0, {}, h.opts, b), b = e.margin, d = e.padding, "number" === c.type(b) && (e.margin = [ b, b, b, b ]), 
            "number" === c.type(d) && (e.padding = [ d, d, d, d ]), e.modal && c.extend(!0, e, {
                closeBtn: !1,
                closeClick: !1,
                nextClick: !1,
                arrows: !1,
                mouseWheel: !1,
                keys: null,
                helpers: {
                    overlay: {
                        closeClick: !1
                    }
                }
            }), e.autoSize && (e.autoWidth = e.autoHeight = !0), "auto" === e.width && (e.autoWidth = !0), 
            "auto" === e.height && (e.autoHeight = !0), e.group = h.group, e.index = a, h.coming = e, 
            !1 === h.trigger("beforeLoad")) h.coming = null; else {
                if (d = e.type, b = e.href, !d) return h.coming = null, !(!h.current || !h.router || "jumpto" === h.router) && (h.current.index = a, 
                h[h.router](h.direction));
                if (h.isActive = !0, "image" !== d && "swf" !== d || (e.autoHeight = e.autoWidth = !1, 
                e.scrolling = "visible"), "image" === d && (e.aspectRatio = !0), "iframe" === d && k && (e.scrolling = "scroll"), 
                e.wrap = c(e.tpl.wrap).addClass("fancybox-" + (k ? "mobile" : "desktop") + " fancybox-type-" + d + " fancybox-tmp " + e.wrapCSS).appendTo(e.parent || "body"), 
                c.extend(e, {
                    skin: c(".fancybox-skin", e.wrap),
                    outer: c(".fancybox-outer", e.wrap),
                    inner: c(".fancybox-inner", e.wrap)
                }), c.each([ "Top", "Right", "Bottom", "Left" ], function(a, b) {
                    e.skin.css("padding" + b, p(e.padding[a]));
                }), h.trigger("onReady"), "inline" === d || "html" === d) {
                    if (!e.content || !e.content.length) return h._error("content");
                } else if (!b) return h._error("href");
                "image" === d ? h._loadImage() : "ajax" === d ? h._loadAjax() : "iframe" === d ? h._loadIframe() : h._afterLoad();
            }
        },
        _error: function(a) {
            c.extend(h.coming, {
                type: "html",
                autoWidth: !0,
                autoHeight: !0,
                minWidth: 0,
                minHeight: 0,
                scrolling: "no",
                hasError: a,
                content: h.coming.tpl.error
            }), h._afterLoad();
        },
        _loadImage: function() {
            var a = h.imgPreload = new Image();
            a.onload = function() {
                this.onload = this.onerror = null, h.coming.width = this.width / h.opts.pixelRatio, 
                h.coming.height = this.height / h.opts.pixelRatio, h._afterLoad();
            }, a.onerror = function() {
                this.onload = this.onerror = null, h._error("image");
            }, a.src = h.coming.href, !0 !== a.complete && h.showLoading();
        },
        _loadAjax: function() {
            var a = h.coming;
            h.showLoading(), h.ajaxLoad = c.ajax(c.extend({}, a.ajax, {
                url: a.href,
                error: function(a, b) {
                    h.coming && "abort" !== b ? h._error("ajax", a) : h.hideLoading();
                },
                success: function(b, c) {
                    "success" === c && (a.content = b, h._afterLoad());
                }
            }));
        },
        _loadIframe: function() {
            var a = h.coming, b = c(a.tpl.iframe.replace(/\{rnd\}/g, new Date().getTime())).attr("scrolling", k ? "auto" : a.iframe.scrolling).attr("src", a.href);
            c(a.wrap).bind("onReset", function() {
                try {
                    c(this).find("iframe").hide().attr("src", "//about:blank").end().empty();
                } catch (a) {}
            }), a.iframe.preload && (h.showLoading(), b.one("load", function() {
                c(this).data("ready", 1), k || c(this).bind("load.fb", h.update), c(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(), 
                h._afterLoad();
            })), a.content = b.appendTo(a.inner), a.iframe.preload || h._afterLoad();
        },
        _preloadImages: function() {
            var a, b, c = h.group, d = h.current, e = c.length, f = d.preload ? Math.min(d.preload, e - 1) : 0;
            for (b = 1; b <= f; b += 1) a = c[(d.index + b) % e], "image" === a.type && a.href && (new Image().src = a.href);
        },
        _afterLoad: function() {
            var a, b, d, e, f, g = h.coming, i = h.current;
            if (h.hideLoading(), g && !1 !== h.isActive) if (!1 === h.trigger("afterLoad", g, i)) g.wrap.stop(!0).trigger("onReset").remove(), 
            h.coming = null; else {
                switch (i && (h.trigger("beforeChange", i), i.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()), 
                h.unbindEvents(), a = g.content, b = g.type, d = g.scrolling, c.extend(h, {
                    wrap: g.wrap,
                    skin: g.skin,
                    outer: g.outer,
                    inner: g.inner,
                    current: g,
                    previous: i
                }), e = g.href, b) {
                  case "inline":
                  case "ajax":
                  case "html":
                    g.selector ? a = c("<div>").html(a).find(g.selector) : l(a) && (a.data("fancybox-placeholder") || a.data("fancybox-placeholder", c('<div class="fancybox-placeholder"></div>').insertAfter(a).hide()), 
                    a = a.show().detach(), g.wrap.bind("onReset", function() {
                        c(this).find(a).length && a.hide().replaceAll(a.data("fancybox-placeholder")).data("fancybox-placeholder", !1);
                    }));
                    break;

                  case "image":
                    a = g.tpl.image.replace(/\{href\}/g, e);
                    break;

                  case "swf":
                    a = '<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="' + e + '"></param>', 
                    f = "", c.each(g.swf, function(b, c) {
                        a += '<param name="' + b + '" value="' + c + '"></param>', f += " " + b + '="' + c + '"';
                    }), a += '<embed src="' + e + '" type="application/x-shockwave-flash" width="100%" height="100%"' + f + "></embed></object>";
                }
                l(a) && a.parent().is(g.inner) || g.inner.append(a), h.trigger("beforeShow"), g.inner.css("overflow", "yes" === d ? "scroll" : "no" === d ? "hidden" : d), 
                h._setDimension(), h.reposition(), h.isOpen = !1, h.coming = null, h.bindEvents(), 
                h.isOpened ? i.prevMethod && h.transitions[i.prevMethod]() : c(".fancybox-wrap").not(g.wrap).stop(!0).trigger("onReset").remove(), 
                h.transitions[h.isOpened ? g.nextMethod : g.openMethod](), h._preloadImages();
            }
        },
        _setDimension: function() {
            var a, b, d, e, f, g, i, j, k, l = h.getViewport(), m = 0, q = !1, r = !1, q = h.wrap, s = h.skin, t = h.inner, u = h.current, r = u.width, v = u.height, w = u.minWidth, x = u.minHeight, y = u.maxWidth, z = u.maxHeight, A = u.scrolling, B = u.scrollOutside ? u.scrollbarWidth : 0, C = u.margin, D = o(C[1] + C[3]), E = o(C[0] + C[2]);
            if (q.add(s).add(t).width("auto").height("auto").removeClass("fancybox-tmp"), C = o(s.outerWidth(!0) - s.width()), 
            a = o(s.outerHeight(!0) - s.height()), b = D + C, d = E + a, e = n(r) ? (l.w - b) * o(r) / 100 : r, 
            f = n(v) ? (l.h - d) * o(v) / 100 : v, "iframe" === u.type) {
                if (k = u.content, u.autoHeight && 1 === k.data("ready")) try {
                    k[0].contentWindow.document.location && (t.width(e).height(9999), g = k.contents().find("body"), 
                    B && g.css("overflow-x", "hidden"), f = g.outerHeight(!0));
                } catch (a) {}
            } else (u.autoWidth || u.autoHeight) && (t.addClass("fancybox-tmp"), u.autoWidth || t.width(e), 
            u.autoHeight || t.height(f), u.autoWidth && (e = t.width()), u.autoHeight && (f = t.height()), 
            t.removeClass("fancybox-tmp"));
            if (r = o(e), v = o(f), j = e / f, w = o(n(w) ? o(w, "w") - b : w), y = o(n(y) ? o(y, "w") - b : y), 
            x = o(n(x) ? o(x, "h") - d : x), z = o(n(z) ? o(z, "h") - d : z), g = y, i = z, 
            u.fitToView && (y = Math.min(l.w - b, y), z = Math.min(l.h - d, z)), b = l.w - D, 
            E = l.h - E, u.aspectRatio ? (r > y && (r = y, v = o(r / j)), v > z && (v = z, r = o(v * j)), 
            r < w && (r = w, v = o(r / j)), v < x && (v = x, r = o(v * j))) : (r = Math.max(w, Math.min(r, y)), 
            u.autoHeight && "iframe" !== u.type && (t.width(r), v = t.height()), v = Math.max(x, Math.min(v, z))), 
            u.fitToView) if (t.width(r).height(v), q.width(r + C), l = q.width(), D = q.height(), 
            u.aspectRatio) for (;(l > b || D > E) && r > w && v > x && !(19 < m++); ) v = Math.max(x, Math.min(z, v - 10)), 
            r = o(v * j), r < w && (r = w, v = o(r / j)), r > y && (r = y, v = o(r / j)), t.width(r).height(v), 
            q.width(r + C), l = q.width(), D = q.height(); else r = Math.max(w, Math.min(r, r - (l - b))), 
            v = Math.max(x, Math.min(v, v - (D - E)));
            B && "auto" === A && v < f && r + C + B < b && (r += B), t.width(r).height(v), q.width(r + C), 
            l = q.width(), D = q.height(), q = (l > b || D > E) && r > w && v > x, r = u.aspectRatio ? r < g && v < i && r < e && v < f : (r < g || v < i) && (r < e || v < f), 
            c.extend(u, {
                dim: {
                    width: p(l),
                    height: p(D)
                },
                origWidth: e,
                origHeight: f,
                canShrink: q,
                canExpand: r,
                wPadding: C,
                hPadding: a,
                wrapSpace: D - s.outerHeight(!0),
                skinSpace: s.height() - v
            }), !k && u.autoHeight && v > x && v < z && !r && t.height("auto");
        },
        _getPosition: function(a) {
            var b = h.current, c = h.getViewport(), d = b.margin, e = h.wrap.width() + d[1] + d[3], f = h.wrap.height() + d[0] + d[2], d = {
                position: "absolute",
                top: d[0],
                left: d[3]
            };
            return b.autoCenter && b.fixed && !a && f <= c.h && e <= c.w ? d.position = "fixed" : b.locked || (d.top += c.y, 
            d.left += c.x), d.top = p(Math.max(d.top, d.top + (c.h - f) * b.topRatio)), d.left = p(Math.max(d.left, d.left + (c.w - e) * b.leftRatio)), 
            d;
        },
        _afterZoomIn: function() {
            var a = h.current;
            a && (h.isOpen = h.isOpened = !0, h.wrap.css("overflow", "visible").addClass("fancybox-opened"), 
            h.update(), (a.closeClick || a.nextClick && 1 < h.group.length) && h.inner.css("cursor", "pointer").bind("click.fb", function(b) {
                c(b.target).is("a") || c(b.target).parent().is("a") || (b.preventDefault(), h[a.closeClick ? "close" : "next"]());
            }), a.closeBtn && c(a.tpl.closeBtn).appendTo(h.skin).bind("click.fb", function(a) {
                a.preventDefault(), h.close();
            }), a.arrows && 1 < h.group.length && ((a.loop || 0 < a.index) && c(a.tpl.prev).appendTo(h.outer).bind("click.fb", h.prev), 
            (a.loop || a.index < h.group.length - 1) && c(a.tpl.next).appendTo(h.outer).bind("click.fb", h.next)), 
            h.trigger("afterShow"), a.loop || a.index !== a.group.length - 1 ? h.opts.autoPlay && !h.player.isActive && (h.opts.autoPlay = !1, 
            h.play(!0)) : h.play(!1));
        },
        _afterZoomOut: function(a) {
            a = a || h.current, c(".fancybox-wrap").trigger("onReset").remove(), c.extend(h, {
                group: {},
                opts: {},
                router: !1,
                current: null,
                isActive: !1,
                isOpened: !1,
                isOpen: !1,
                isClosing: !1,
                wrap: null,
                skin: null,
                outer: null,
                inner: null
            }), h.trigger("afterClose", a);
        }
    }), h.transitions = {
        getOrigPosition: function() {
            var a = h.current, b = a.element, c = a.orig, d = {}, e = 50, f = 50, g = a.hPadding, i = a.wPadding, j = h.getViewport();
            return !c && a.isDom && b.is(":visible") && (c = b.find("img:first"), c.length || (c = b)), 
            l(c) ? (d = c.offset(), c.is("img") && (e = c.outerWidth(), f = c.outerHeight())) : (d.top = j.y + (j.h - f) * a.topRatio, 
            d.left = j.x + (j.w - e) * a.leftRatio), ("fixed" === h.wrap.css("position") || a.locked) && (d.top -= j.y, 
            d.left -= j.x), d = {
                top: p(d.top - g * a.topRatio),
                left: p(d.left - i * a.leftRatio),
                width: p(e + i),
                height: p(f + g)
            };
        },
        step: function(a, b) {
            var c, d, e = b.prop;
            d = h.current;
            var f = d.wrapSpace, g = d.skinSpace;
            "width" !== e && "height" !== e || (c = b.end === b.start ? 1 : (a - b.start) / (b.end - b.start), 
            h.isClosing && (c = 1 - c), d = "width" === e ? d.wPadding : d.hPadding, d = a - d, 
            h.skin[e](o("width" === e ? d : d - f * c)), h.inner[e](o("width" === e ? d : d - f * c - g * c)));
        },
        zoomIn: function() {
            var a = h.current, b = a.pos, d = a.openEffect, e = "elastic" === d, f = c.extend({
                opacity: 1
            }, b);
            delete f.position, e ? (b = this.getOrigPosition(), a.openOpacity && (b.opacity = .1)) : "fade" === d && (b.opacity = .1), 
            h.wrap.css(b).animate(f, {
                duration: "none" === d ? 0 : a.openSpeed,
                easing: a.openEasing,
                step: e ? this.step : null,
                complete: h._afterZoomIn
            });
        },
        zoomOut: function() {
            var a = h.current, b = a.closeEffect, c = "elastic" === b, d = {
                opacity: .1
            };
            c && (d = this.getOrigPosition(), a.closeOpacity && (d.opacity = .1)), h.wrap.animate(d, {
                duration: "none" === b ? 0 : a.closeSpeed,
                easing: a.closeEasing,
                step: c ? this.step : null,
                complete: h._afterZoomOut
            });
        },
        changeIn: function() {
            var a, b = h.current, c = b.nextEffect, d = b.pos, e = {
                opacity: 1
            }, f = h.direction;
            d.opacity = .1, "elastic" === c && (a = "down" === f || "up" === f ? "top" : "left", 
            "down" === f || "right" === f ? (d[a] = p(o(d[a]) - 200), e[a] = "+=200px") : (d[a] = p(o(d[a]) + 200), 
            e[a] = "-=200px")), "none" === c ? h._afterZoomIn() : h.wrap.css(d).animate(e, {
                duration: b.nextSpeed,
                easing: b.nextEasing,
                complete: h._afterZoomIn
            });
        },
        changeOut: function() {
            var a = h.previous, b = a.prevEffect, d = {
                opacity: .1
            }, e = h.direction;
            "elastic" === b && (d["down" === e || "up" === e ? "top" : "left"] = ("up" === e || "left" === e ? "-" : "+") + "=200px"), 
            a.wrap.animate(d, {
                duration: "none" === b ? 0 : a.prevSpeed,
                easing: a.prevEasing,
                complete: function() {
                    c(this).trigger("onReset").remove();
                }
            });
        }
    }, h.helpers.overlay = {
        defaults: {
            closeClick: !0,
            speedOut: 200,
            showEarly: !0,
            css: {},
            locked: !k,
            fixed: !0
        },
        overlay: null,
        fixed: !1,
        el: c("html"),
        create: function(a) {
            var b;
            a = c.extend({}, this.defaults, a), this.overlay && this.close(), b = h.coming ? h.coming.parent : a.parent, 
            this.overlay = c('<div class="fancybox-overlay"></div>').appendTo(b && b.lenth ? b : "body"), 
            this.fixed = !1, a.fixed && h.defaults.fixed && (this.overlay.addClass("fancybox-overlay-fixed"), 
            this.fixed = !0);
        },
        open: function(a) {
            var b = this;
            a = c.extend({}, this.defaults, a), this.overlay ? this.overlay.unbind(".overlay").width("auto").height("auto") : this.create(a), 
            this.fixed || (f.bind("resize.overlay", c.proxy(this.update, this)), this.update()), 
            a.closeClick && this.overlay.bind("click.overlay", function(a) {
                if (c(a.target).hasClass("fancybox-overlay")) return h.isActive ? h.close() : b.close(), 
                !1;
            }), this.overlay.css(a.css).show();
        },
        close: function() {
            f.unbind("resize.overlay"), this.el.hasClass("fancybox-lock") && (c(".fancybox-margin").removeClass("fancybox-margin"), 
            this.el.removeClass("fancybox-lock"), f.scrollTop(this.scrollV).scrollLeft(this.scrollH)), 
            c(".fancybox-overlay").remove().hide(), c.extend(this, {
                overlay: null,
                fixed: !1
            });
        },
        update: function() {
            var a, c = "100%";
            this.overlay.width(c).height("100%"), i ? (a = Math.max(b.documentElement.offsetWidth, b.body.offsetWidth), 
            g.width() > a && (c = g.width())) : g.width() > f.width() && (c = g.width()), this.overlay.width(c).height(g.height());
        },
        onReady: function(a, b) {
            var d = this.overlay;
            c(".fancybox-overlay").stop(!0, !0), d || this.create(a), a.locked && this.fixed && b.fixed && (b.locked = this.overlay.append(b.wrap), 
            b.fixed = !1), !0 === a.showEarly && this.beforeShow.apply(this, arguments);
        },
        beforeShow: function(a, b) {
            b.locked && !this.el.hasClass("fancybox-lock") && (!1 !== this.fixPosition && c("*").filter(function() {
                return "fixed" === c(this).css("position") && !c(this).hasClass("fancybox-overlay") && !c(this).hasClass("fancybox-wrap");
            }).addClass("fancybox-margin"), this.el.addClass("fancybox-margin"), this.scrollV = f.scrollTop(), 
            this.scrollH = f.scrollLeft(), this.el.addClass("fancybox-lock"), f.scrollTop(this.scrollV).scrollLeft(this.scrollH)), 
            this.open(a);
        },
        onUpdate: function() {
            this.fixed || this.update();
        },
        afterClose: function(a) {
            this.overlay && !h.coming && this.overlay.fadeOut(a.speedOut, c.proxy(this.close, this));
        }
    }, h.helpers.title = {
        defaults: {
            type: "float",
            position: "bottom"
        },
        beforeShow: function(a) {
            var b = h.current, d = b.title, e = a.type;
            if (c.isFunction(d) && (d = d.call(b.element, b)), m(d) && "" !== c.trim(d)) {
                switch (b = c('<div class="fancybox-title fancybox-title-' + e + '-wrap">' + d + "</div>"), 
                e) {
                  case "inside":
                    e = h.skin;
                    break;

                  case "outside":
                    e = h.wrap;
                    break;

                  case "over":
                    e = h.inner;
                    break;

                  default:
                    e = h.skin, b.appendTo("body"), i && b.width(b.width()), b.wrapInner('<span class="child"></span>'), 
                    h.current.margin[2] += Math.abs(o(b.css("margin-bottom")));
                }
                b["top" === a.position ? "prependTo" : "appendTo"](e);
            }
        }
    }, c.fn.fancybox = function(a) {
        var b, d = c(this), e = this.selector || "", f = function(f) {
            var g, i, j = c(this).blur(), k = b;
            f.ctrlKey || f.altKey || f.shiftKey || f.metaKey || j.is(".fancybox-wrap") || (g = a.groupAttr || "data-fancybox-group", 
            i = j.attr(g), i || (g = "rel", i = j.get(0)[g]), i && "" !== i && "nofollow" !== i && (j = e.length ? c(e) : d, 
            j = j.filter("[" + g + '="' + i + '"]'), k = j.index(this)), a.index = k, !1 !== h.open(j, a) && f.preventDefault());
        };
        return a = a || {}, b = a.index || 0, e && !1 !== a.live ? g.undelegate(e, "click.fb-start").delegate(e + ":not('.fancybox-item, .fancybox-nav')", "click.fb-start", f) : d.unbind("click.fb-start").bind("click.fb-start", f), 
        this.filter("[data-fancybox-start=1]").trigger("click"), this;
    }, g.ready(function() {
        var b, f;
        c.scrollbarWidth === d && (c.scrollbarWidth = function() {
            var a = c('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"), b = a.children(), b = b.innerWidth() - b.height(99).innerWidth();
            return a.remove(), b;
        }), c.support.fixedPosition === d && (c.support.fixedPosition = function() {
            var a = c('<div style="position:fixed;top:20px;"></div>').appendTo("body"), b = 20 === a[0].offsetTop || 15 === a[0].offsetTop;
            return a.remove(), b;
        }()), c.extend(h.defaults, {
            scrollbarWidth: c.scrollbarWidth(),
            fixed: c.support.fixedPosition,
            parent: c("body")
        }), b = c(a).width(), e.addClass("fancybox-lock-test"), f = c(a).width(), e.removeClass("fancybox-lock-test"), 
        c("<style type='text/css'>.fancybox-margin{margin-right:" + (f - b) + "px;}</style>").appendTo("head");
    });
}(window, document, jQuery), function(a) {
    "use strict";
    "function" == typeof define && define.amd ? define([ "jquery" ], a) : "undefined" != typeof exports ? module.exports = a(require("jquery")) : a(jQuery);
}(function(a) {
    "use strict";
    var b = window.Slick || {};
    b = function() {
        function b(b, d) {
            var e, f = this;
            f.defaults = {
                accessibility: !0,
                adaptiveHeight: !1,
                appendArrows: a(b),
                appendDots: a(b),
                arrows: !0,
                asNavFor: null,
                prevArrow: '<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',
                nextArrow: '<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',
                autoplay: !1,
                autoplaySpeed: 3e3,
                centerMode: !1,
                centerPadding: "50px",
                cssEase: "ease",
                customPaging: function(b, c) {
                    return a('<button type="button" data-role="none" role="button" tabindex="0" />').text(c + 1);
                },
                dots: !1,
                dotsClass: "slick-dots",
                draggable: !0,
                easing: "linear",
                edgeFriction: .35,
                fade: !1,
                focusOnSelect: !1,
                infinite: !0,
                initialSlide: 0,
                lazyLoad: "ondemand",
                mobileFirst: !1,
                pauseOnHover: !0,
                pauseOnFocus: !0,
                pauseOnDotsHover: !1,
                respondTo: "window",
                responsive: null,
                rows: 1,
                rtl: !1,
                slide: "",
                slidesPerRow: 1,
                slidesToShow: 1,
                slidesToScroll: 1,
                speed: 500,
                swipe: !0,
                swipeToSlide: !1,
                touchMove: !0,
                touchThreshold: 5,
                useCSS: !0,
                useTransform: !0,
                variableWidth: !1,
                vertical: !1,
                verticalSwiping: !1,
                waitForAnimate: !0,
                zIndex: 1e3
            }, f.initials = {
                animating: !1,
                dragging: !1,
                autoPlayTimer: null,
                currentDirection: 0,
                currentLeft: null,
                currentSlide: 0,
                direction: 1,
                $dots: null,
                listWidth: null,
                listHeight: null,
                loadIndex: 0,
                $nextArrow: null,
                $prevArrow: null,
                slideCount: null,
                slideWidth: null,
                $slideTrack: null,
                $slides: null,
                sliding: !1,
                slideOffset: 0,
                swipeLeft: null,
                $list: null,
                touchObject: {},
                transformsEnabled: !1,
                unslicked: !1
            }, a.extend(f, f.initials), f.activeBreakpoint = null, f.animType = null, f.animProp = null, 
            f.breakpoints = [], f.breakpointSettings = [], f.cssTransitions = !1, f.focussed = !1, 
            f.interrupted = !1, f.hidden = "hidden", f.paused = !0, f.positionProp = null, f.respondTo = null, 
            f.rowCount = 1, f.shouldClick = !0, f.$slider = a(b), f.$slidesCache = null, f.transformType = null, 
            f.transitionType = null, f.visibilityChange = "visibilitychange", f.windowWidth = 0, 
            f.windowTimer = null, e = a(b).data("slick") || {}, f.options = a.extend({}, f.defaults, d, e), 
            f.currentSlide = f.options.initialSlide, f.originalSettings = f.options, void 0 !== document.mozHidden ? (f.hidden = "mozHidden", 
            f.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (f.hidden = "webkitHidden", 
            f.visibilityChange = "webkitvisibilitychange"), f.autoPlay = a.proxy(f.autoPlay, f), 
            f.autoPlayClear = a.proxy(f.autoPlayClear, f), f.autoPlayIterator = a.proxy(f.autoPlayIterator, f), 
            f.changeSlide = a.proxy(f.changeSlide, f), f.clickHandler = a.proxy(f.clickHandler, f), 
            f.selectHandler = a.proxy(f.selectHandler, f), f.setPosition = a.proxy(f.setPosition, f), 
            f.swipeHandler = a.proxy(f.swipeHandler, f), f.dragHandler = a.proxy(f.dragHandler, f), 
            f.keyHandler = a.proxy(f.keyHandler, f), f.instanceUid = c++, f.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, 
            f.registerBreakpoints(), f.init(!0);
        }
        var c = 0;
        return b;
    }(), b.prototype.activateADA = function() {
        this.$slideTrack.find(".slick-active").attr({
            "aria-hidden": "false"
        }).find("a, input, button, select").attr({
            tabindex: "0"
        });
    }, b.prototype.addSlide = b.prototype.slickAdd = function(b, c, d) {
        var e = this;
        if ("boolean" == typeof c) d = c, c = null; else if (c < 0 || c >= e.slideCount) return !1;
        e.unload(), "number" == typeof c ? 0 === c && 0 === e.$slides.length ? a(b).appendTo(e.$slideTrack) : d ? a(b).insertBefore(e.$slides.eq(c)) : a(b).insertAfter(e.$slides.eq(c)) : !0 === d ? a(b).prependTo(e.$slideTrack) : a(b).appendTo(e.$slideTrack), 
        e.$slides = e.$slideTrack.children(this.options.slide), e.$slideTrack.children(this.options.slide).detach(), 
        e.$slideTrack.append(e.$slides), e.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b);
        }), e.$slidesCache = e.$slides, e.reinit();
    }, b.prototype.animateHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && !0 === a.options.adaptiveHeight && !1 === a.options.vertical) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.animate({
                height: b
            }, a.options.speed);
        }
    }, b.prototype.animateSlide = function(b, c) {
        var d = {}, e = this;
        e.animateHeight(), !0 === e.options.rtl && !1 === e.options.vertical && (b = -b), 
        !1 === e.transformsEnabled ? !1 === e.options.vertical ? e.$slideTrack.animate({
            left: b
        }, e.options.speed, e.options.easing, c) : e.$slideTrack.animate({
            top: b
        }, e.options.speed, e.options.easing, c) : !1 === e.cssTransitions ? (!0 === e.options.rtl && (e.currentLeft = -e.currentLeft), 
        a({
            animStart: e.currentLeft
        }).animate({
            animStart: b
        }, {
            duration: e.options.speed,
            easing: e.options.easing,
            step: function(a) {
                a = Math.ceil(a), !1 === e.options.vertical ? (d[e.animType] = "translate(" + a + "px, 0px)", 
                e.$slideTrack.css(d)) : (d[e.animType] = "translate(0px," + a + "px)", e.$slideTrack.css(d));
            },
            complete: function() {
                c && c.call();
            }
        })) : (e.applyTransition(), b = Math.ceil(b), !1 === e.options.vertical ? d[e.animType] = "translate3d(" + b + "px, 0px, 0px)" : d[e.animType] = "translate3d(0px," + b + "px, 0px)", 
        e.$slideTrack.css(d), c && setTimeout(function() {
            e.disableTransition(), c.call();
        }, e.options.speed));
    }, b.prototype.getNavTarget = function() {
        var b = this, c = b.options.asNavFor;
        return c && null !== c && (c = a(c).not(b.$slider)), c;
    }, b.prototype.asNavFor = function(b) {
        var c = this, d = c.getNavTarget();
        null !== d && "object" == typeof d && d.each(function() {
            var c = a(this).slick("getSlick");
            c.unslicked || c.slideHandler(b, !0);
        });
    }, b.prototype.applyTransition = function(a) {
        var b = this, c = {};
        !1 === b.options.fade ? c[b.transitionType] = b.transformType + " " + b.options.speed + "ms " + b.options.cssEase : c[b.transitionType] = "opacity " + b.options.speed + "ms " + b.options.cssEase, 
        !1 === b.options.fade ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }, b.prototype.autoPlay = function() {
        var a = this;
        a.autoPlayClear(), a.slideCount > a.options.slidesToShow && (a.autoPlayTimer = setInterval(a.autoPlayIterator, a.options.autoplaySpeed));
    }, b.prototype.autoPlayClear = function() {
        var a = this;
        a.autoPlayTimer && clearInterval(a.autoPlayTimer);
    }, b.prototype.autoPlayIterator = function() {
        var a = this, b = a.currentSlide + a.options.slidesToScroll;
        a.paused || a.interrupted || a.focussed || (!1 === a.options.infinite && (1 === a.direction && a.currentSlide + 1 === a.slideCount - 1 ? a.direction = 0 : 0 === a.direction && (b = a.currentSlide - a.options.slidesToScroll, 
        a.currentSlide - 1 == 0 && (a.direction = 1))), a.slideHandler(b));
    }, b.prototype.buildArrows = function() {
        var b = this;
        !0 === b.options.arrows && (b.$prevArrow = a(b.options.prevArrow).addClass("slick-arrow"), 
        b.$nextArrow = a(b.options.nextArrow).addClass("slick-arrow"), b.slideCount > b.options.slidesToShow ? (b.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), 
        b.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.prependTo(b.options.appendArrows), 
        b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.appendTo(b.options.appendArrows), 
        !0 !== b.options.infinite && b.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : b.$prevArrow.add(b.$nextArrow).addClass("slick-hidden").attr({
            "aria-disabled": "true",
            tabindex: "-1"
        }));
    }, b.prototype.buildDots = function() {
        var b, c, d = this;
        if (!0 === d.options.dots && d.slideCount > d.options.slidesToShow) {
            for (d.$slider.addClass("slick-dotted"), c = a("<ul />").addClass(d.options.dotsClass), 
            b = 0; b <= d.getDotCount(); b += 1) c.append(a("<li />").append(d.options.customPaging.call(this, d, b)));
            d.$dots = c.appendTo(d.options.appendDots), d.$dots.find("li").first().addClass("slick-active").attr("aria-hidden", "false");
        }
    }, b.prototype.buildOut = function() {
        var b = this;
        b.$slides = b.$slider.children(b.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), 
        b.slideCount = b.$slides.length, b.$slides.each(function(b, c) {
            a(c).attr("data-slick-index", b).data("originalStyling", a(c).attr("style") || "");
        }), b.$slider.addClass("slick-slider"), b.$slideTrack = 0 === b.slideCount ? a('<div class="slick-track"/>').appendTo(b.$slider) : b.$slides.wrapAll('<div class="slick-track"/>').parent(), 
        b.$list = b.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(), 
        b.$slideTrack.css("opacity", 0), !0 !== b.options.centerMode && !0 !== b.options.swipeToSlide || (b.options.slidesToScroll = 1), 
        a("img[data-lazy]", b.$slider).not("[src]").addClass("slick-loading"), b.setupInfinite(), 
        b.buildArrows(), b.buildDots(), b.updateDots(), b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), 
        !0 === b.options.draggable && b.$list.addClass("draggable");
    }, b.prototype.buildRows = function() {
        var a, b, c, d, e, f, g, h = this;
        if (d = document.createDocumentFragment(), f = h.$slider.children(), h.options.rows > 1) {
            for (g = h.options.slidesPerRow * h.options.rows, e = Math.ceil(f.length / g), a = 0; a < e; a++) {
                var i = document.createElement("div");
                for (b = 0; b < h.options.rows; b++) {
                    var j = document.createElement("div");
                    for (c = 0; c < h.options.slidesPerRow; c++) {
                        var k = a * g + (b * h.options.slidesPerRow + c);
                        f.get(k) && j.appendChild(f.get(k));
                    }
                    i.appendChild(j);
                }
                d.appendChild(i);
            }
            h.$slider.empty().append(d), h.$slider.children().children().children().css({
                width: 100 / h.options.slidesPerRow + "%",
                display: "inline-block"
            });
        }
    }, b.prototype.checkResponsive = function(b, c) {
        var d, e, f, g = this, h = !1, i = g.$slider.width(), j = window.innerWidth || a(window).width();
        if ("window" === g.respondTo ? f = j : "slider" === g.respondTo ? f = i : "min" === g.respondTo && (f = Math.min(j, i)), 
        g.options.responsive && g.options.responsive.length && null !== g.options.responsive) {
            e = null;
            for (d in g.breakpoints) g.breakpoints.hasOwnProperty(d) && (!1 === g.originalSettings.mobileFirst ? f < g.breakpoints[d] && (e = g.breakpoints[d]) : f > g.breakpoints[d] && (e = g.breakpoints[d]));
            null !== e ? null !== g.activeBreakpoint ? (e !== g.activeBreakpoint || c) && (g.activeBreakpoint = e, 
            "unslick" === g.breakpointSettings[e] ? g.unslick(e) : (g.options = a.extend({}, g.originalSettings, g.breakpointSettings[e]), 
            !0 === b && (g.currentSlide = g.options.initialSlide), g.refresh(b)), h = e) : (g.activeBreakpoint = e, 
            "unslick" === g.breakpointSettings[e] ? g.unslick(e) : (g.options = a.extend({}, g.originalSettings, g.breakpointSettings[e]), 
            !0 === b && (g.currentSlide = g.options.initialSlide), g.refresh(b)), h = e) : null !== g.activeBreakpoint && (g.activeBreakpoint = null, 
            g.options = g.originalSettings, !0 === b && (g.currentSlide = g.options.initialSlide), 
            g.refresh(b), h = e), b || !1 === h || g.$slider.trigger("breakpoint", [ g, h ]);
        }
    }, b.prototype.changeSlide = function(b, c) {
        var d, e, f, g = this, h = a(b.currentTarget);
        switch (h.is("a") && b.preventDefault(), h.is("li") || (h = h.closest("li")), f = g.slideCount % g.options.slidesToScroll != 0, 
        d = f ? 0 : (g.slideCount - g.currentSlide) % g.options.slidesToScroll, b.data.message) {
          case "previous":
            e = 0 === d ? g.options.slidesToScroll : g.options.slidesToShow - d, g.slideCount > g.options.slidesToShow && g.slideHandler(g.currentSlide - e, !1, c);
            break;

          case "next":
            e = 0 === d ? g.options.slidesToScroll : d, g.slideCount > g.options.slidesToShow && g.slideHandler(g.currentSlide + e, !1, c);
            break;

          case "index":
            var i = 0 === b.data.index ? 0 : b.data.index || h.index() * g.options.slidesToScroll;
            g.slideHandler(g.checkNavigable(i), !1, c), h.children().trigger("focus");
            break;

          default:
            return;
        }
    }, b.prototype.checkNavigable = function(a) {
        var b, c, d = this;
        if (b = d.getNavigableIndexes(), c = 0, a > b[b.length - 1]) a = b[b.length - 1]; else for (var e in b) {
            if (a < b[e]) {
                a = c;
                break;
            }
            c = b[e];
        }
        return a;
    }, b.prototype.cleanUpEvents = function() {
        var b = this;
        b.options.dots && null !== b.$dots && a("li", b.$dots).off("click.slick", b.changeSlide).off("mouseenter.slick", a.proxy(b.interrupt, b, !0)).off("mouseleave.slick", a.proxy(b.interrupt, b, !1)), 
        b.$slider.off("focus.slick blur.slick"), !0 === b.options.arrows && b.slideCount > b.options.slidesToShow && (b.$prevArrow && b.$prevArrow.off("click.slick", b.changeSlide), 
        b.$nextArrow && b.$nextArrow.off("click.slick", b.changeSlide)), b.$list.off("touchstart.slick mousedown.slick", b.swipeHandler), 
        b.$list.off("touchmove.slick mousemove.slick", b.swipeHandler), b.$list.off("touchend.slick mouseup.slick", b.swipeHandler), 
        b.$list.off("touchcancel.slick mouseleave.slick", b.swipeHandler), b.$list.off("click.slick", b.clickHandler), 
        a(document).off(b.visibilityChange, b.visibility), b.cleanUpSlideEvents(), !0 === b.options.accessibility && b.$list.off("keydown.slick", b.keyHandler), 
        !0 === b.options.focusOnSelect && a(b.$slideTrack).children().off("click.slick", b.selectHandler), 
        a(window).off("orientationchange.slick.slick-" + b.instanceUid, b.orientationChange), 
        a(window).off("resize.slick.slick-" + b.instanceUid, b.resize), a("[draggable!=true]", b.$slideTrack).off("dragstart", b.preventDefault), 
        a(window).off("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).off("ready.slick.slick-" + b.instanceUid, b.setPosition);
    }, b.prototype.cleanUpSlideEvents = function() {
        var b = this;
        b.$list.off("mouseenter.slick", a.proxy(b.interrupt, b, !0)), b.$list.off("mouseleave.slick", a.proxy(b.interrupt, b, !1));
    }, b.prototype.cleanUpRows = function() {
        var a, b = this;
        b.options.rows > 1 && (a = b.$slides.children().children(), a.removeAttr("style"), 
        b.$slider.empty().append(a));
    }, b.prototype.clickHandler = function(a) {
        !1 === this.shouldClick && (a.stopImmediatePropagation(), a.stopPropagation(), a.preventDefault());
    }, b.prototype.destroy = function(b) {
        var c = this;
        c.autoPlayClear(), c.touchObject = {}, c.cleanUpEvents(), a(".slick-cloned", c.$slider).detach(), 
        c.$dots && c.$dots.remove(), c.$prevArrow && c.$prevArrow.length && (c.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        c.htmlExpr.test(c.options.prevArrow) && c.$prevArrow.remove()), c.$nextArrow && c.$nextArrow.length && (c.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), 
        c.htmlExpr.test(c.options.nextArrow) && c.$nextArrow.remove()), c.$slides && (c.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function() {
            a(this).attr("style", a(this).data("originalStyling"));
        }), c.$slideTrack.children(this.options.slide).detach(), c.$slideTrack.detach(), 
        c.$list.detach(), c.$slider.append(c.$slides)), c.cleanUpRows(), c.$slider.removeClass("slick-slider"), 
        c.$slider.removeClass("slick-initialized"), c.$slider.removeClass("slick-dotted"), 
        c.unslicked = !0, b || c.$slider.trigger("destroy", [ c ]);
    }, b.prototype.disableTransition = function(a) {
        var b = this, c = {};
        c[b.transitionType] = "", !1 === b.options.fade ? b.$slideTrack.css(c) : b.$slides.eq(a).css(c);
    }, b.prototype.fadeSlide = function(a, b) {
        var c = this;
        !1 === c.cssTransitions ? (c.$slides.eq(a).css({
            zIndex: c.options.zIndex
        }), c.$slides.eq(a).animate({
            opacity: 1
        }, c.options.speed, c.options.easing, b)) : (c.applyTransition(a), c.$slides.eq(a).css({
            opacity: 1,
            zIndex: c.options.zIndex
        }), b && setTimeout(function() {
            c.disableTransition(a), b.call();
        }, c.options.speed));
    }, b.prototype.fadeSlideOut = function(a) {
        var b = this;
        !1 === b.cssTransitions ? b.$slides.eq(a).animate({
            opacity: 0,
            zIndex: b.options.zIndex - 2
        }, b.options.speed, b.options.easing) : (b.applyTransition(a), b.$slides.eq(a).css({
            opacity: 0,
            zIndex: b.options.zIndex - 2
        }));
    }, b.prototype.filterSlides = b.prototype.slickFilter = function(a) {
        var b = this;
        null !== a && (b.$slidesCache = b.$slides, b.unload(), b.$slideTrack.children(this.options.slide).detach(), 
        b.$slidesCache.filter(a).appendTo(b.$slideTrack), b.reinit());
    }, b.prototype.focusHandler = function() {
        var b = this;
        b.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*:not(.slick-arrow)", function(c) {
            c.stopImmediatePropagation();
            var d = a(this);
            setTimeout(function() {
                b.options.pauseOnFocus && (b.focussed = d.is(":focus"), b.autoPlay());
            }, 0);
        });
    }, b.prototype.getCurrent = b.prototype.slickCurrentSlide = function() {
        return this.currentSlide;
    }, b.prototype.getDotCount = function() {
        var a = this, b = 0, c = 0, d = 0;
        if (!0 === a.options.infinite) for (;b < a.slideCount; ) ++d, b = c + a.options.slidesToScroll, 
        c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow; else if (!0 === a.options.centerMode) d = a.slideCount; else if (a.options.asNavFor) for (;b < a.slideCount; ) ++d, 
        b = c + a.options.slidesToScroll, c += a.options.slidesToScroll <= a.options.slidesToShow ? a.options.slidesToScroll : a.options.slidesToShow; else d = 1 + Math.ceil((a.slideCount - a.options.slidesToShow) / a.options.slidesToScroll);
        return d - 1;
    }, b.prototype.getLeft = function(a) {
        var b, c, d, e = this, f = 0;
        return e.slideOffset = 0, c = e.$slides.first().outerHeight(!0), !0 === e.options.infinite ? (e.slideCount > e.options.slidesToShow && (e.slideOffset = e.slideWidth * e.options.slidesToShow * -1, 
        f = c * e.options.slidesToShow * -1), e.slideCount % e.options.slidesToScroll != 0 && a + e.options.slidesToScroll > e.slideCount && e.slideCount > e.options.slidesToShow && (a > e.slideCount ? (e.slideOffset = (e.options.slidesToShow - (a - e.slideCount)) * e.slideWidth * -1, 
        f = (e.options.slidesToShow - (a - e.slideCount)) * c * -1) : (e.slideOffset = e.slideCount % e.options.slidesToScroll * e.slideWidth * -1, 
        f = e.slideCount % e.options.slidesToScroll * c * -1))) : a + e.options.slidesToShow > e.slideCount && (e.slideOffset = (a + e.options.slidesToShow - e.slideCount) * e.slideWidth, 
        f = (a + e.options.slidesToShow - e.slideCount) * c), e.slideCount <= e.options.slidesToShow && (e.slideOffset = 0, 
        f = 0), !0 === e.options.centerMode && !0 === e.options.infinite ? e.slideOffset += e.slideWidth * Math.floor(e.options.slidesToShow / 2) - e.slideWidth : !0 === e.options.centerMode && (e.slideOffset = 0, 
        e.slideOffset += e.slideWidth * Math.floor(e.options.slidesToShow / 2)), b = !1 === e.options.vertical ? a * e.slideWidth * -1 + e.slideOffset : a * c * -1 + f, 
        !0 === e.options.variableWidth && (d = e.slideCount <= e.options.slidesToShow || !1 === e.options.infinite ? e.$slideTrack.children(".slick-slide").eq(a) : e.$slideTrack.children(".slick-slide").eq(a + e.options.slidesToShow), 
        b = !0 === e.options.rtl ? d[0] ? -1 * (e.$slideTrack.width() - d[0].offsetLeft - d.width()) : 0 : d[0] ? -1 * d[0].offsetLeft : 0, 
        !0 === e.options.centerMode && (d = e.slideCount <= e.options.slidesToShow || !1 === e.options.infinite ? e.$slideTrack.children(".slick-slide").eq(a) : e.$slideTrack.children(".slick-slide").eq(a + e.options.slidesToShow + 1), 
        b = !0 === e.options.rtl ? d[0] ? -1 * (e.$slideTrack.width() - d[0].offsetLeft - d.width()) : 0 : d[0] ? -1 * d[0].offsetLeft : 0, 
        b += (e.$list.width() - d.outerWidth()) / 2)), b;
    }, b.prototype.getOption = b.prototype.slickGetOption = function(a) {
        return this.options[a];
    }, b.prototype.getNavigableIndexes = function() {
        var a, b = this, c = 0, d = 0, e = [];
        for (!1 === b.options.infinite ? a = b.slideCount : (c = -1 * b.options.slidesToScroll, 
        d = -1 * b.options.slidesToScroll, a = 2 * b.slideCount); c < a; ) e.push(c), c = d + b.options.slidesToScroll, 
        d += b.options.slidesToScroll <= b.options.slidesToShow ? b.options.slidesToScroll : b.options.slidesToShow;
        return e;
    }, b.prototype.getSlick = function() {
        return this;
    }, b.prototype.getSlideCount = function() {
        var b, c, d = this;
        return c = !0 === d.options.centerMode ? d.slideWidth * Math.floor(d.options.slidesToShow / 2) : 0, 
        !0 === d.options.swipeToSlide ? (d.$slideTrack.find(".slick-slide").each(function(e, f) {
            if (f.offsetLeft - c + a(f).outerWidth() / 2 > -1 * d.swipeLeft) return b = f, !1;
        }), Math.abs(a(b).attr("data-slick-index") - d.currentSlide) || 1) : d.options.slidesToScroll;
    }, b.prototype.goTo = b.prototype.slickGoTo = function(a, b) {
        this.changeSlide({
            data: {
                message: "index",
                index: parseInt(a)
            }
        }, b);
    }, b.prototype.init = function(b) {
        var c = this;
        a(c.$slider).hasClass("slick-initialized") || (a(c.$slider).addClass("slick-initialized"), 
        c.buildRows(), c.buildOut(), c.setProps(), c.startLoad(), c.loadSlider(), c.initializeEvents(), 
        c.updateArrows(), c.updateDots(), c.checkResponsive(!0), c.focusHandler()), b && c.$slider.trigger("init", [ c ]), 
        !0 === c.options.accessibility && c.initADA(), c.options.autoplay && (c.paused = !1, 
        c.autoPlay());
    }, b.prototype.initADA = function() {
        var b = this;
        b.$slides.add(b.$slideTrack.find(".slick-cloned")).attr({
            "aria-hidden": "true",
            tabindex: "-1"
        }).find("a, input, button, select").attr({
            tabindex: "-1"
        }), b.$slideTrack.attr("role", "listbox"), b.$slides.not(b.$slideTrack.find(".slick-cloned")).each(function(c) {
            a(this).attr({
                role: "option",
                "aria-describedby": "slick-slide" + b.instanceUid + c
            });
        }), null !== b.$dots && b.$dots.attr("role", "tablist").find("li").each(function(c) {
            a(this).attr({
                role: "presentation",
                "aria-selected": "false",
                "aria-controls": "navigation" + b.instanceUid + c,
                id: "slick-slide" + b.instanceUid + c
            });
        }).first().attr("aria-selected", "true").end().find("button").attr("role", "button").end().closest("div").attr("role", "toolbar"), 
        b.activateADA();
    }, b.prototype.initArrowEvents = function() {
        var a = this;
        !0 === a.options.arrows && a.slideCount > a.options.slidesToShow && (a.$prevArrow.off("click.slick").on("click.slick", {
            message: "previous"
        }, a.changeSlide), a.$nextArrow.off("click.slick").on("click.slick", {
            message: "next"
        }, a.changeSlide));
    }, b.prototype.initDotEvents = function() {
        var b = this;
        !0 === b.options.dots && b.slideCount > b.options.slidesToShow && a("li", b.$dots).on("click.slick", {
            message: "index"
        }, b.changeSlide), !0 === b.options.dots && !0 === b.options.pauseOnDotsHover && a("li", b.$dots).on("mouseenter.slick", a.proxy(b.interrupt, b, !0)).on("mouseleave.slick", a.proxy(b.interrupt, b, !1));
    }, b.prototype.initSlideEvents = function() {
        var b = this;
        b.options.pauseOnHover && (b.$list.on("mouseenter.slick", a.proxy(b.interrupt, b, !0)), 
        b.$list.on("mouseleave.slick", a.proxy(b.interrupt, b, !1)));
    }, b.prototype.initializeEvents = function() {
        var b = this;
        b.initArrowEvents(), b.initDotEvents(), b.initSlideEvents(), b.$list.on("touchstart.slick mousedown.slick", {
            action: "start"
        }, b.swipeHandler), b.$list.on("touchmove.slick mousemove.slick", {
            action: "move"
        }, b.swipeHandler), b.$list.on("touchend.slick mouseup.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("touchcancel.slick mouseleave.slick", {
            action: "end"
        }, b.swipeHandler), b.$list.on("click.slick", b.clickHandler), a(document).on(b.visibilityChange, a.proxy(b.visibility, b)), 
        !0 === b.options.accessibility && b.$list.on("keydown.slick", b.keyHandler), !0 === b.options.focusOnSelect && a(b.$slideTrack).children().on("click.slick", b.selectHandler), 
        a(window).on("orientationchange.slick.slick-" + b.instanceUid, a.proxy(b.orientationChange, b)), 
        a(window).on("resize.slick.slick-" + b.instanceUid, a.proxy(b.resize, b)), a("[draggable!=true]", b.$slideTrack).on("dragstart", b.preventDefault), 
        a(window).on("load.slick.slick-" + b.instanceUid, b.setPosition), a(document).on("ready.slick.slick-" + b.instanceUid, b.setPosition);
    }, b.prototype.initUI = function() {
        var a = this;
        !0 === a.options.arrows && a.slideCount > a.options.slidesToShow && (a.$prevArrow.show(), 
        a.$nextArrow.show()), !0 === a.options.dots && a.slideCount > a.options.slidesToShow && a.$dots.show();
    }, b.prototype.keyHandler = function(a) {
        var b = this;
        a.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === a.keyCode && !0 === b.options.accessibility ? b.changeSlide({
            data: {
                message: !0 === b.options.rtl ? "next" : "previous"
            }
        }) : 39 === a.keyCode && !0 === b.options.accessibility && b.changeSlide({
            data: {
                message: !0 === b.options.rtl ? "previous" : "next"
            }
        }));
    }, b.prototype.lazyLoad = function() {
        function b(b) {
            a("img[data-lazy]", b).each(function() {
                var b = a(this), c = a(this).attr("data-lazy"), d = document.createElement("img");
                d.onload = function() {
                    b.animate({
                        opacity: 0
                    }, 100, function() {
                        b.attr("src", c).animate({
                            opacity: 1
                        }, 200, function() {
                            b.removeAttr("data-lazy").removeClass("slick-loading");
                        }), g.$slider.trigger("lazyLoaded", [ g, b, c ]);
                    });
                }, d.onerror = function() {
                    b.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
                    g.$slider.trigger("lazyLoadError", [ g, b, c ]);
                }, d.src = c;
            });
        }
        var c, d, e, f, g = this;
        !0 === g.options.centerMode ? !0 === g.options.infinite ? (e = g.currentSlide + (g.options.slidesToShow / 2 + 1), 
        f = e + g.options.slidesToShow + 2) : (e = Math.max(0, g.currentSlide - (g.options.slidesToShow / 2 + 1)), 
        f = g.options.slidesToShow / 2 + 1 + 2 + g.currentSlide) : (e = g.options.infinite ? g.options.slidesToShow + g.currentSlide : g.currentSlide, 
        f = Math.ceil(e + g.options.slidesToShow), !0 === g.options.fade && (e > 0 && e--, 
        f <= g.slideCount && f++)), c = g.$slider.find(".slick-slide").slice(e, f), b(c), 
        g.slideCount <= g.options.slidesToShow ? (d = g.$slider.find(".slick-slide"), b(d)) : g.currentSlide >= g.slideCount - g.options.slidesToShow ? (d = g.$slider.find(".slick-cloned").slice(0, g.options.slidesToShow), 
        b(d)) : 0 === g.currentSlide && (d = g.$slider.find(".slick-cloned").slice(-1 * g.options.slidesToShow), 
        b(d));
    }, b.prototype.loadSlider = function() {
        var a = this;
        a.setPosition(), a.$slideTrack.css({
            opacity: 1
        }), a.$slider.removeClass("slick-loading"), a.initUI(), "progressive" === a.options.lazyLoad && a.progressiveLazyLoad();
    }, b.prototype.next = b.prototype.slickNext = function() {
        this.changeSlide({
            data: {
                message: "next"
            }
        });
    }, b.prototype.orientationChange = function() {
        var a = this;
        a.checkResponsive(), a.setPosition();
    }, b.prototype.pause = b.prototype.slickPause = function() {
        var a = this;
        a.autoPlayClear(), a.paused = !0;
    }, b.prototype.play = b.prototype.slickPlay = function() {
        var a = this;
        a.autoPlay(), a.options.autoplay = !0, a.paused = !1, a.focussed = !1, a.interrupted = !1;
    }, b.prototype.postSlide = function(a) {
        var b = this;
        b.unslicked || (b.$slider.trigger("afterChange", [ b, a ]), b.animating = !1, b.setPosition(), 
        b.swipeLeft = null, b.options.autoplay && b.autoPlay(), !0 === b.options.accessibility && b.initADA());
    }, b.prototype.prev = b.prototype.slickPrev = function() {
        this.changeSlide({
            data: {
                message: "previous"
            }
        });
    }, b.prototype.preventDefault = function(a) {
        a.preventDefault();
    }, b.prototype.progressiveLazyLoad = function(b) {
        b = b || 1;
        var c, d, e, f = this, g = a("img[data-lazy]", f.$slider);
        g.length ? (c = g.first(), d = c.attr("data-lazy"), e = document.createElement("img"), 
        e.onload = function() {
            c.attr("src", d).removeAttr("data-lazy").removeClass("slick-loading"), !0 === f.options.adaptiveHeight && f.setPosition(), 
            f.$slider.trigger("lazyLoaded", [ f, c, d ]), f.progressiveLazyLoad();
        }, e.onerror = function() {
            b < 3 ? setTimeout(function() {
                f.progressiveLazyLoad(b + 1);
            }, 500) : (c.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), 
            f.$slider.trigger("lazyLoadError", [ f, c, d ]), f.progressiveLazyLoad());
        }, e.src = d) : f.$slider.trigger("allImagesLoaded", [ f ]);
    }, b.prototype.refresh = function(b) {
        var c, d, e = this;
        d = e.slideCount - e.options.slidesToShow, !e.options.infinite && e.currentSlide > d && (e.currentSlide = d), 
        e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), c = e.currentSlide, 
        e.destroy(!0), a.extend(e, e.initials, {
            currentSlide: c
        }), e.init(), b || e.changeSlide({
            data: {
                message: "index",
                index: c
            }
        }, !1);
    }, b.prototype.registerBreakpoints = function() {
        var b, c, d, e = this, f = e.options.responsive || null;
        if ("array" === a.type(f) && f.length) {
            e.respondTo = e.options.respondTo || "window";
            for (b in f) if (d = e.breakpoints.length - 1, c = f[b].breakpoint, f.hasOwnProperty(b)) {
                for (;d >= 0; ) e.breakpoints[d] && e.breakpoints[d] === c && e.breakpoints.splice(d, 1), 
                d--;
                e.breakpoints.push(c), e.breakpointSettings[c] = f[b].settings;
            }
            e.breakpoints.sort(function(a, b) {
                return e.options.mobileFirst ? a - b : b - a;
            });
        }
    }, b.prototype.reinit = function() {
        var b = this;
        b.$slides = b.$slideTrack.children(b.options.slide).addClass("slick-slide"), b.slideCount = b.$slides.length, 
        b.currentSlide >= b.slideCount && 0 !== b.currentSlide && (b.currentSlide = b.currentSlide - b.options.slidesToScroll), 
        b.slideCount <= b.options.slidesToShow && (b.currentSlide = 0), b.registerBreakpoints(), 
        b.setProps(), b.setupInfinite(), b.buildArrows(), b.updateArrows(), b.initArrowEvents(), 
        b.buildDots(), b.updateDots(), b.initDotEvents(), b.cleanUpSlideEvents(), b.initSlideEvents(), 
        b.checkResponsive(!1, !0), !0 === b.options.focusOnSelect && a(b.$slideTrack).children().on("click.slick", b.selectHandler), 
        b.setSlideClasses("number" == typeof b.currentSlide ? b.currentSlide : 0), b.setPosition(), 
        b.focusHandler(), b.paused = !b.options.autoplay, b.autoPlay(), b.$slider.trigger("reInit", [ b ]);
    }, b.prototype.resize = function() {
        var b = this;
        a(window).width() !== b.windowWidth && (clearTimeout(b.windowDelay), b.windowDelay = window.setTimeout(function() {
            b.windowWidth = a(window).width(), b.checkResponsive(), b.unslicked || b.setPosition();
        }, 50));
    }, b.prototype.removeSlide = b.prototype.slickRemove = function(a, b, c) {
        var d = this;
        if ("boolean" == typeof a ? (b = a, a = !0 === b ? 0 : d.slideCount - 1) : a = !0 === b ? --a : a, 
        d.slideCount < 1 || a < 0 || a > d.slideCount - 1) return !1;
        d.unload(), !0 === c ? d.$slideTrack.children().remove() : d.$slideTrack.children(this.options.slide).eq(a).remove(), 
        d.$slides = d.$slideTrack.children(this.options.slide), d.$slideTrack.children(this.options.slide).detach(), 
        d.$slideTrack.append(d.$slides), d.$slidesCache = d.$slides, d.reinit();
    }, b.prototype.setCSS = function(a) {
        var b, c, d = this, e = {};
        !0 === d.options.rtl && (a = -a), b = "left" == d.positionProp ? Math.ceil(a) + "px" : "0px", 
        c = "top" == d.positionProp ? Math.ceil(a) + "px" : "0px", e[d.positionProp] = a, 
        !1 === d.transformsEnabled ? d.$slideTrack.css(e) : (e = {}, !1 === d.cssTransitions ? (e[d.animType] = "translate(" + b + ", " + c + ")", 
        d.$slideTrack.css(e)) : (e[d.animType] = "translate3d(" + b + ", " + c + ", 0px)", 
        d.$slideTrack.css(e)));
    }, b.prototype.setDimensions = function() {
        var a = this;
        !1 === a.options.vertical ? !0 === a.options.centerMode && a.$list.css({
            padding: "0px " + a.options.centerPadding
        }) : (a.$list.height(a.$slides.first().outerHeight(!0) * a.options.slidesToShow), 
        !0 === a.options.centerMode && a.$list.css({
            padding: a.options.centerPadding + " 0px"
        })), a.listWidth = a.$list.width(), a.listHeight = a.$list.height(), !1 === a.options.vertical && !1 === a.options.variableWidth ? (a.slideWidth = Math.ceil(a.listWidth / a.options.slidesToShow), 
        a.$slideTrack.width(Math.ceil(a.slideWidth * a.$slideTrack.children(".slick-slide").length))) : !0 === a.options.variableWidth ? a.$slideTrack.width(5e3 * a.slideCount) : (a.slideWidth = Math.ceil(a.listWidth), 
        a.$slideTrack.height(Math.ceil(a.$slides.first().outerHeight(!0) * a.$slideTrack.children(".slick-slide").length)));
        var b = a.$slides.first().outerWidth(!0) - a.$slides.first().width();
        !1 === a.options.variableWidth && a.$slideTrack.children(".slick-slide").width(a.slideWidth - b);
    }, b.prototype.setFade = function() {
        var b, c = this;
        c.$slides.each(function(d, e) {
            b = c.slideWidth * d * -1, !0 === c.options.rtl ? a(e).css({
                position: "relative",
                right: b,
                top: 0,
                zIndex: c.options.zIndex - 2,
                opacity: 0
            }) : a(e).css({
                position: "relative",
                left: b,
                top: 0,
                zIndex: c.options.zIndex - 2,
                opacity: 0
            });
        }), c.$slides.eq(c.currentSlide).css({
            zIndex: c.options.zIndex - 1,
            opacity: 1
        });
    }, b.prototype.setHeight = function() {
        var a = this;
        if (1 === a.options.slidesToShow && !0 === a.options.adaptiveHeight && !1 === a.options.vertical) {
            var b = a.$slides.eq(a.currentSlide).outerHeight(!0);
            a.$list.css("height", b);
        }
    }, b.prototype.setOption = b.prototype.slickSetOption = function() {
        var b, c, d, e, f, g = this, h = !1;
        if ("object" === a.type(arguments[0]) ? (d = arguments[0], h = arguments[1], f = "multiple") : "string" === a.type(arguments[0]) && (d = arguments[0], 
        e = arguments[1], h = arguments[2], "responsive" === arguments[0] && "array" === a.type(arguments[1]) ? f = "responsive" : void 0 !== arguments[1] && (f = "single")), 
        "single" === f) g.options[d] = e; else if ("multiple" === f) a.each(d, function(a, b) {
            g.options[a] = b;
        }); else if ("responsive" === f) for (c in e) if ("array" !== a.type(g.options.responsive)) g.options.responsive = [ e[c] ]; else {
            for (b = g.options.responsive.length - 1; b >= 0; ) g.options.responsive[b].breakpoint === e[c].breakpoint && g.options.responsive.splice(b, 1), 
            b--;
            g.options.responsive.push(e[c]);
        }
        h && (g.unload(), g.reinit());
    }, b.prototype.setPosition = function() {
        var a = this;
        a.setDimensions(), a.setHeight(), !1 === a.options.fade ? a.setCSS(a.getLeft(a.currentSlide)) : a.setFade(), 
        a.$slider.trigger("setPosition", [ a ]);
    }, b.prototype.setProps = function() {
        var a = this, b = document.body.style;
        a.positionProp = !0 === a.options.vertical ? "top" : "left", "top" === a.positionProp ? a.$slider.addClass("slick-vertical") : a.$slider.removeClass("slick-vertical"), 
        void 0 === b.WebkitTransition && void 0 === b.MozTransition && void 0 === b.msTransition || !0 === a.options.useCSS && (a.cssTransitions = !0), 
        a.options.fade && ("number" == typeof a.options.zIndex ? a.options.zIndex < 3 && (a.options.zIndex = 3) : a.options.zIndex = a.defaults.zIndex), 
        void 0 !== b.OTransform && (a.animType = "OTransform", a.transformType = "-o-transform", 
        a.transitionType = "OTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), 
        void 0 !== b.MozTransform && (a.animType = "MozTransform", a.transformType = "-moz-transform", 
        a.transitionType = "MozTransition", void 0 === b.perspectiveProperty && void 0 === b.MozPerspective && (a.animType = !1)), 
        void 0 !== b.webkitTransform && (a.animType = "webkitTransform", a.transformType = "-webkit-transform", 
        a.transitionType = "webkitTransition", void 0 === b.perspectiveProperty && void 0 === b.webkitPerspective && (a.animType = !1)), 
        void 0 !== b.msTransform && (a.animType = "msTransform", a.transformType = "-ms-transform", 
        a.transitionType = "msTransition", void 0 === b.msTransform && (a.animType = !1)), 
        void 0 !== b.transform && !1 !== a.animType && (a.animType = "transform", a.transformType = "transform", 
        a.transitionType = "transition"), a.transformsEnabled = a.options.useTransform && null !== a.animType && !1 !== a.animType;
    }, b.prototype.setSlideClasses = function(a) {
        var b, c, d, e, f = this;
        c = f.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), 
        f.$slides.eq(a).addClass("slick-current"), !0 === f.options.centerMode ? (b = Math.floor(f.options.slidesToShow / 2), 
        !0 === f.options.infinite && (a >= b && a <= f.slideCount - 1 - b ? f.$slides.slice(a - b, a + b + 1).addClass("slick-active").attr("aria-hidden", "false") : (d = f.options.slidesToShow + a, 
        c.slice(d - b + 1, d + b + 2).addClass("slick-active").attr("aria-hidden", "false")), 
        0 === a ? c.eq(c.length - 1 - f.options.slidesToShow).addClass("slick-center") : a === f.slideCount - 1 && c.eq(f.options.slidesToShow).addClass("slick-center")), 
        f.$slides.eq(a).addClass("slick-center")) : a >= 0 && a <= f.slideCount - f.options.slidesToShow ? f.$slides.slice(a, a + f.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : c.length <= f.options.slidesToShow ? c.addClass("slick-active").attr("aria-hidden", "false") : (e = f.slideCount % f.options.slidesToShow, 
        d = !0 === f.options.infinite ? f.options.slidesToShow + a : a, f.options.slidesToShow == f.options.slidesToScroll && f.slideCount - a < f.options.slidesToShow ? c.slice(d - (f.options.slidesToShow - e), d + e).addClass("slick-active").attr("aria-hidden", "false") : c.slice(d, d + f.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false")), 
        "ondemand" === f.options.lazyLoad && f.lazyLoad();
    }, b.prototype.setupInfinite = function() {
        var b, c, d, e = this;
        if (!0 === e.options.fade && (e.options.centerMode = !1), !0 === e.options.infinite && !1 === e.options.fade && (c = null, 
        e.slideCount > e.options.slidesToShow)) {
            for (d = !0 === e.options.centerMode ? e.options.slidesToShow + 1 : e.options.slidesToShow, 
            b = e.slideCount; b > e.slideCount - d; b -= 1) c = b - 1, a(e.$slides[c]).clone(!0).attr("id", "").attr("data-slick-index", c - e.slideCount).prependTo(e.$slideTrack).addClass("slick-cloned");
            for (b = 0; b < d; b += 1) c = b, a(e.$slides[c]).clone(!0).attr("id", "").attr("data-slick-index", c + e.slideCount).appendTo(e.$slideTrack).addClass("slick-cloned");
            e.$slideTrack.find(".slick-cloned").find("[id]").each(function() {
                a(this).attr("id", "");
            });
        }
    }, b.prototype.interrupt = function(a) {
        var b = this;
        a || b.autoPlay(), b.interrupted = a;
    }, b.prototype.selectHandler = function(b) {
        var c = this, d = a(b.target).is(".slick-slide") ? a(b.target) : a(b.target).parents(".slick-slide"), e = parseInt(d.attr("data-slick-index"));
        if (e || (e = 0), c.slideCount <= c.options.slidesToShow) return c.setSlideClasses(e), 
        void c.asNavFor(e);
        c.slideHandler(e);
    }, b.prototype.slideHandler = function(a, b, c) {
        var d, e, f, g, h, i = null, j = this;
        if (b = b || !1, (!0 !== j.animating || !0 !== j.options.waitForAnimate) && !(!0 === j.options.fade && j.currentSlide === a || j.slideCount <= j.options.slidesToShow)) {
            if (!1 === b && j.asNavFor(a), d = a, i = j.getLeft(d), g = j.getLeft(j.currentSlide), 
            j.currentLeft = null === j.swipeLeft ? g : j.swipeLeft, !1 === j.options.infinite && !1 === j.options.centerMode && (a < 0 || a > j.getDotCount() * j.options.slidesToScroll)) return void (!1 === j.options.fade && (d = j.currentSlide, 
            !0 !== c ? j.animateSlide(g, function() {
                j.postSlide(d);
            }) : j.postSlide(d)));
            if (!1 === j.options.infinite && !0 === j.options.centerMode && (a < 0 || a > j.slideCount - j.options.slidesToScroll)) return void (!1 === j.options.fade && (d = j.currentSlide, 
            !0 !== c ? j.animateSlide(g, function() {
                j.postSlide(d);
            }) : j.postSlide(d)));
            if (j.options.autoplay && clearInterval(j.autoPlayTimer), e = d < 0 ? j.slideCount % j.options.slidesToScroll != 0 ? j.slideCount - j.slideCount % j.options.slidesToScroll : j.slideCount + d : d >= j.slideCount ? j.slideCount % j.options.slidesToScroll != 0 ? 0 : d - j.slideCount : d, 
            j.animating = !0, j.$slider.trigger("beforeChange", [ j, j.currentSlide, e ]), f = j.currentSlide, 
            j.currentSlide = e, j.setSlideClasses(j.currentSlide), j.options.asNavFor && (h = j.getNavTarget(), 
            h = h.slick("getSlick"), h.slideCount <= h.options.slidesToShow && h.setSlideClasses(j.currentSlide)), 
            j.updateDots(), j.updateArrows(), !0 === j.options.fade) return !0 !== c ? (j.fadeSlideOut(f), 
            j.fadeSlide(e, function() {
                j.postSlide(e);
            })) : j.postSlide(e), void j.animateHeight();
            !0 !== c ? j.animateSlide(i, function() {
                j.postSlide(e);
            }) : j.postSlide(e);
        }
    }, b.prototype.startLoad = function() {
        var a = this;
        !0 === a.options.arrows && a.slideCount > a.options.slidesToShow && (a.$prevArrow.hide(), 
        a.$nextArrow.hide()), !0 === a.options.dots && a.slideCount > a.options.slidesToShow && a.$dots.hide(), 
        a.$slider.addClass("slick-loading");
    }, b.prototype.swipeDirection = function() {
        var a, b, c, d, e = this;
        return a = e.touchObject.startX - e.touchObject.curX, b = e.touchObject.startY - e.touchObject.curY, 
        c = Math.atan2(b, a), d = Math.round(180 * c / Math.PI), d < 0 && (d = 360 - Math.abs(d)), 
        d <= 45 && d >= 0 ? !1 === e.options.rtl ? "left" : "right" : d <= 360 && d >= 315 ? !1 === e.options.rtl ? "left" : "right" : d >= 135 && d <= 225 ? !1 === e.options.rtl ? "right" : "left" : !0 === e.options.verticalSwiping ? d >= 35 && d <= 135 ? "down" : "up" : "vertical";
    }, b.prototype.swipeEnd = function(a) {
        var b, c, d = this;
        if (d.dragging = !1, d.interrupted = !1, d.shouldClick = !(d.touchObject.swipeLength > 10), 
        void 0 === d.touchObject.curX) return !1;
        if (!0 === d.touchObject.edgeHit && d.$slider.trigger("edge", [ d, d.swipeDirection() ]), 
        d.touchObject.swipeLength >= d.touchObject.minSwipe) {
            switch (c = d.swipeDirection()) {
              case "left":
              case "down":
                b = d.options.swipeToSlide ? d.checkNavigable(d.currentSlide + d.getSlideCount()) : d.currentSlide + d.getSlideCount(), 
                d.currentDirection = 0;
                break;

              case "right":
              case "up":
                b = d.options.swipeToSlide ? d.checkNavigable(d.currentSlide - d.getSlideCount()) : d.currentSlide - d.getSlideCount(), 
                d.currentDirection = 1;
            }
            "vertical" != c && (d.slideHandler(b), d.touchObject = {}, d.$slider.trigger("swipe", [ d, c ]));
        } else d.touchObject.startX !== d.touchObject.curX && (d.slideHandler(d.currentSlide), 
        d.touchObject = {});
    }, b.prototype.swipeHandler = function(a) {
        var b = this;
        if (!(!1 === b.options.swipe || "ontouchend" in document && !1 === b.options.swipe || !1 === b.options.draggable && -1 !== a.type.indexOf("mouse"))) switch (b.touchObject.fingerCount = a.originalEvent && void 0 !== a.originalEvent.touches ? a.originalEvent.touches.length : 1, 
        b.touchObject.minSwipe = b.listWidth / b.options.touchThreshold, !0 === b.options.verticalSwiping && (b.touchObject.minSwipe = b.listHeight / b.options.touchThreshold), 
        a.data.action) {
          case "start":
            b.swipeStart(a);
            break;

          case "move":
            b.swipeMove(a);
            break;

          case "end":
            b.swipeEnd(a);
        }
    }, b.prototype.swipeMove = function(a) {
        var b, c, d, e, f, g = this;
        return f = void 0 !== a.originalEvent ? a.originalEvent.touches : null, !(!g.dragging || f && 1 !== f.length) && (b = g.getLeft(g.currentSlide), 
        g.touchObject.curX = void 0 !== f ? f[0].pageX : a.clientX, g.touchObject.curY = void 0 !== f ? f[0].pageY : a.clientY, 
        g.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(g.touchObject.curX - g.touchObject.startX, 2))), 
        !0 === g.options.verticalSwiping && (g.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(g.touchObject.curY - g.touchObject.startY, 2)))), 
        "vertical" !== (c = g.swipeDirection()) ? (void 0 !== a.originalEvent && g.touchObject.swipeLength > 4 && a.preventDefault(), 
        e = (!1 === g.options.rtl ? 1 : -1) * (g.touchObject.curX > g.touchObject.startX ? 1 : -1), 
        !0 === g.options.verticalSwiping && (e = g.touchObject.curY > g.touchObject.startY ? 1 : -1), 
        d = g.touchObject.swipeLength, g.touchObject.edgeHit = !1, !1 === g.options.infinite && (0 === g.currentSlide && "right" === c || g.currentSlide >= g.getDotCount() && "left" === c) && (d = g.touchObject.swipeLength * g.options.edgeFriction, 
        g.touchObject.edgeHit = !0), !1 === g.options.vertical ? g.swipeLeft = b + d * e : g.swipeLeft = b + d * (g.$list.height() / g.listWidth) * e, 
        !0 === g.options.verticalSwiping && (g.swipeLeft = b + d * e), !0 !== g.options.fade && !1 !== g.options.touchMove && (!0 === g.animating ? (g.swipeLeft = null, 
        !1) : void g.setCSS(g.swipeLeft))) : void 0);
    }, b.prototype.swipeStart = function(a) {
        var b, c = this;
        if (c.interrupted = !0, 1 !== c.touchObject.fingerCount || c.slideCount <= c.options.slidesToShow) return c.touchObject = {}, 
        !1;
        void 0 !== a.originalEvent && void 0 !== a.originalEvent.touches && (b = a.originalEvent.touches[0]), 
        c.touchObject.startX = c.touchObject.curX = void 0 !== b ? b.pageX : a.clientX, 
        c.touchObject.startY = c.touchObject.curY = void 0 !== b ? b.pageY : a.clientY, 
        c.dragging = !0;
    }, b.prototype.unfilterSlides = b.prototype.slickUnfilter = function() {
        var a = this;
        null !== a.$slidesCache && (a.unload(), a.$slideTrack.children(this.options.slide).detach(), 
        a.$slidesCache.appendTo(a.$slideTrack), a.reinit());
    }, b.prototype.unload = function() {
        var b = this;
        a(".slick-cloned", b.$slider).remove(), b.$dots && b.$dots.remove(), b.$prevArrow && b.htmlExpr.test(b.options.prevArrow) && b.$prevArrow.remove(), 
        b.$nextArrow && b.htmlExpr.test(b.options.nextArrow) && b.$nextArrow.remove(), b.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "");
    }, b.prototype.unslick = function(a) {
        var b = this;
        b.$slider.trigger("unslick", [ b, a ]), b.destroy();
    }, b.prototype.updateArrows = function() {
        var a = this;
        Math.floor(a.options.slidesToShow / 2), !0 === a.options.arrows && a.slideCount > a.options.slidesToShow && !a.options.infinite && (a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 
        a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === a.currentSlide ? (a.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : a.currentSlide >= a.slideCount - a.options.slidesToShow && !1 === a.options.centerMode ? (a.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : a.currentSlide >= a.slideCount - 1 && !0 === a.options.centerMode && (a.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), 
        a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")));
    }, b.prototype.updateDots = function() {
        var a = this;
        null !== a.$dots && (a.$dots.find("li").removeClass("slick-active").attr("aria-hidden", "true"), 
        a.$dots.find("li").eq(Math.floor(a.currentSlide / a.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden", "false"));
    }, b.prototype.visibility = function() {
        var a = this;
        a.options.autoplay && (document[a.hidden] ? a.interrupted = !0 : a.interrupted = !1);
    }, a.fn.slick = function() {
        var a, c, d = this, e = arguments[0], f = Array.prototype.slice.call(arguments, 1), g = d.length;
        for (a = 0; a < g; a++) if ("object" == typeof e || void 0 === e ? d[a].slick = new b(d[a], e) : c = d[a].slick[e].apply(d[a].slick, f), 
        void 0 !== c) return c;
        return d;
    };
}), function(a, b) {
    "function" == typeof define && define.amd ? define([ "jquery" ], b) : "object" == typeof exports ? module.exports = b(require("jquery")) : a.jquery_mmenu_all_min_js = b(a.jQuery);
}(this, function(a) {
    return function(a) {
        function b() {
            a[c].glbl || (h = {
                $wndw: a(window),
                $docu: a(document),
                $html: a("html"),
                $body: a("body")
            }, e = {}, f = {}, g = {}, a.each([ e, f, g ], function(a, b) {
                b.add = function(a) {
                    a = a.split(" ");
                    for (var c = 0, d = a.length; c < d; c++) b[a[c]] = b.mm(a[c]);
                };
            }), e.mm = function(a) {
                return "mm-" + a;
            }, e.add("wrapper menu panels panel nopanel highest opened subopened navbar hasnavbar title btn prev next listview nolistview inset vertical selected divider spacer hidden fullsubopen noanimation"), 
            e.umm = function(a) {
                return "mm-" == a.slice(0, 3) && (a = a.slice(3)), a;
            }, f.mm = function(a) {
                return "mm-" + a;
            }, f.add("parent child"), g.mm = function(a) {
                return a + ".mm";
            }, g.add("transitionend webkitTransitionEnd click scroll resize keydown mousedown mouseup touchstart touchmove touchend orientationchange"), 
            a[c]._c = e, a[c]._d = f, a[c]._e = g, a[c].glbl = h);
        }
        var c = "mmenu", d = "6.0.2";
        if (!(a[c] && a[c].version > d)) {
            a[c] = function(a, b, c) {
                return this.$menu = a, this._api = [ "bind", "getInstance", "initPanels", "openPanel", "closePanel", "closeAllPanels", "setSelected" ], 
                this.opts = b, this.conf = c, this.vars = {}, this.cbck = {}, this.mtch = {}, "function" == typeof this.___deprecated && this.___deprecated(), 
                this._initAddons(), this._initExtensions(), this._initMenu(), this._initPanels(), 
                this._initOpened(), this._initAnchors(), this._initMatchMedia(), "function" == typeof this.___debug && this.___debug(), 
                this;
            }, a[c].version = d, a[c].addons = {}, a[c].uniqueId = 0, a[c].defaults = {
                extensions: [],
                initMenu: function() {},
                initPanels: function() {},
                navbar: {
                    add: !0,
                    title: "Menu",
                    titleLink: "parent"
                },
                onClick: {
                    setSelected: !0
                },
                slidingSubmenus: !0
            }, a[c].configuration = {
                classNames: {
                    divider: "Divider",
                    inset: "Inset",
                    nolistview: "NoListview",
                    nopanel: "NoPanel",
                    panel: "Panel",
                    selected: "Selected",
                    spacer: "Spacer",
                    vertical: "Vertical"
                },
                clone: !1,
                openingInterval: 25,
                panelNodetype: "ul, ol, div",
                transitionDuration: 400
            }, a[c].prototype = {
                getInstance: function() {
                    return this;
                },
                initPanels: function(a) {
                    this._initPanels(a);
                },
                openPanel: function(b, d) {
                    if (this.trigger("openPanel:before", b), b && b.length && (b.is("." + e.panel) || (b = b.closest("." + e.panel)), 
                    b.is("." + e.panel))) {
                        var g = this;
                        if ("boolean" != typeof d && (d = !0), b.hasClass(e.vertical)) b.add(b.parents("." + e.vertical)).removeClass(e.hidden).parent("li").addClass(e.opened), 
                        this.openPanel(b.parents("." + e.panel).not("." + e.vertical).first()), this.trigger("openPanel:start", b), 
                        this.trigger("openPanel:finish", b); else {
                            if (b.hasClass(e.opened)) return;
                            var h = this.$pnls.children("." + e.panel), i = h.filter("." + e.opened);
                            if (!a[c].support.csstransitions) return i.addClass(e.hidden).removeClass(e.opened), 
                            b.removeClass(e.hidden).addClass(e.opened), this.trigger("openPanel:start", b), 
                            void this.trigger("openPanel:finish", b);
                            h.not(b).removeClass(e.subopened);
                            for (var j = b.data(f.parent); j; ) j = j.closest("." + e.panel), j.is("." + e.vertical) || j.addClass(e.subopened), 
                            j = j.data(f.parent);
                            h.removeClass(e.highest).not(i).not(b).addClass(e.hidden), b.removeClass(e.hidden);
                            var k = function() {
                                i.removeClass(e.opened), b.addClass(e.opened), b.hasClass(e.subopened) ? (i.addClass(e.highest), 
                                b.removeClass(e.subopened)) : (i.addClass(e.subopened), b.addClass(e.highest)), 
                                this.trigger("openPanel:start", b);
                            }, l = function() {
                                i.removeClass(e.highest).addClass(e.hidden), b.removeClass(e.highest), this.trigger("openPanel:finish", b);
                            };
                            d && !b.hasClass(e.noanimation) ? setTimeout(function() {
                                g.__transitionend(b, function() {
                                    l.call(g);
                                }, g.conf.transitionDuration), k.call(g);
                            }, this.conf.openingInterval) : (k.call(this), l.call(this));
                        }
                        this.trigger("openPanel:after", b);
                    }
                },
                closePanel: function(a) {
                    this.trigger("closePanel:before", a);
                    var b = a.parent();
                    b.hasClass(e.vertical) && (b.removeClass(e.opened), this.trigger("closePanel", a)), 
                    this.trigger("closePanel:after", a);
                },
                closeAllPanels: function() {
                    this.trigger("closeAllPanels:before"), this.$pnls.find("." + e.listview).children().removeClass(e.selected).filter("." + e.vertical).removeClass(e.opened);
                    var a = this.$pnls.children("." + e.panel), b = a.first();
                    this.$pnls.children("." + e.panel).not(b).removeClass(e.subopened).removeClass(e.opened).removeClass(e.highest).addClass(e.hidden), 
                    this.openPanel(b), this.trigger("closeAllPanels:after");
                },
                togglePanel: function(a) {
                    var b = a.parent();
                    b.hasClass(e.vertical) && this[b.hasClass(e.opened) ? "closePanel" : "openPanel"](a);
                },
                setSelected: function(a) {
                    this.trigger("setSelected:before", a), this.$menu.find("." + e.listview).children("." + e.selected).removeClass(e.selected), 
                    a.addClass(e.selected), this.trigger("setSelected:after", a);
                },
                bind: function(a, b) {
                    this.cbck[a] = this.cbck[a] || [], this.cbck[a].push(b);
                },
                trigger: function() {
                    var a = this, b = Array.prototype.slice.call(arguments), c = b.shift();
                    if (this.cbck[c]) for (var d = 0, e = this.cbck[c].length; d < e; d++) this.cbck[c][d].apply(a, b);
                },
                matchMedia: function(a, b, c) {
                    var d = {
                        yes: b,
                        no: c
                    };
                    this.mtch[a] = this.mtch[a] || [], this.mtch[a].push(d);
                },
                _initAddons: function() {
                    this.trigger("initAddons:before");
                    var b;
                    for (b in a[c].addons) a[c].addons[b].add.call(this), a[c].addons[b].add = function() {};
                    for (b in a[c].addons) a[c].addons[b].setup.call(this);
                    this.trigger("initAddons:after");
                },
                _initExtensions: function() {
                    this.trigger("initExtensions:before");
                    var a = this;
                    this.opts.extensions.constructor === Array && (this.opts.extensions = {
                        all: this.opts.extensions
                    });
                    for (var b in this.opts.extensions) this.opts.extensions[b] = this.opts.extensions[b].length ? "mm-" + this.opts.extensions[b].join(" mm-") : "", 
                    this.opts.extensions[b] && function(b) {
                        a.matchMedia(b, function() {
                            this.$menu.addClass(this.opts.extensions[b]);
                        }, function() {
                            this.$menu.removeClass(this.opts.extensions[b]);
                        });
                    }(b);
                    this.trigger("initExtensions:after");
                },
                _initMenu: function() {
                    this.trigger("initMenu:before"), this.conf.clone && (this.$orig = this.$menu, this.$menu = this.$orig.clone(), 
                    this.$menu.add(this.$menu.find("[id]")).filter("[id]").each(function() {
                        a(this).attr("id", e.mm(a(this).attr("id")));
                    })), this.opts.initMenu.call(this, this.$menu, this.$orig), this.$menu.attr("id", this.$menu.attr("id") || this.__getUniqueId()), 
                    this.$pnls = a('<div class="' + e.panels + '" />').append(this.$menu.children(this.conf.panelNodetype)).prependTo(this.$menu);
                    var b = [ e.menu ];
                    this.opts.slidingSubmenus || b.push(e.vertical), this.$menu.addClass(b.join(" ")).parent().addClass(e.wrapper), 
                    this.trigger("initMenu:after");
                },
                _initPanels: function(b) {
                    this.trigger("initPanels:before", b), b = b || this.$pnls.children(this.conf.panelNodetype);
                    var c = a(), d = this, f = function(b) {
                        b.filter(this.conf.panelNodetype).each(function() {
                            if ($panel = d._initPanel(a(this)), $panel) {
                                d._initNavbar($panel), d._initListview($panel), c = c.add($panel);
                                var b = $panel.children("." + e.listview).children("li").children(d.conf.panelNodeType).add($panel.children("." + d.conf.classNames.panel));
                                b.length && f.call(d, b);
                            }
                        });
                    };
                    f.call(this, b), this.opts.initPanels.call(this, c), this.trigger("initPanels:after", c);
                },
                _initPanel: function(a) {
                    if (this.trigger("initPanel:before", a), this.__refactorClass(a, this.conf.classNames.panel, "panel"), 
                    this.__refactorClass(a, this.conf.classNames.nopanel, "nopanel"), this.__refactorClass(a, this.conf.classNames.vertical, "vertical"), 
                    this.__refactorClass(a, this.conf.classNames.inset, "inset"), a.filter("." + e.inset).addClass(e.nopanel), 
                    a.hasClass(e.nopanel)) return !1;
                    if (a.hasClass(e.panel)) return a;
                    var b = a.hasClass(e.vertical) || !this.opts.slidingSubmenus;
                    a.removeClass(e.vertical);
                    var c = a.attr("id") || this.__getUniqueId();
                    a.removeAttr("id"), a.is("ul, ol") && (a.wrap("<div />"), a = a.parent()), a.addClass(e.panel + " " + e.hidden).attr("id", c);
                    var d = a.parent("li");
                    return b ? a.add(d).addClass(e.vertical) : a.appendTo(this.$pnls), d.length && (d.data(f.child, a), 
                    a.data(f.parent, d)), this.trigger("initPanel:after", a), a;
                },
                _initNavbar: function(b) {
                    if (this.trigger("initNavbar:before", b), !b.children("." + e.navbar).length) {
                        var d = b.data(f.parent), g = a('<div class="' + e.navbar + '" />'), h = a[c].i18n(this.opts.navbar.title), i = !1;
                        if (d && d.length) {
                            if (d.hasClass(e.vertical)) return;
                            if (d.parent().is("." + e.listview)) var j = d.children("a, span").not("." + e.next); else var j = d.closest("." + e.panel).find('a[href="#' + b.attr("id") + '"]');
                            j = j.first(), d = j.closest("." + e.panel);
                            var k = d.attr("id");
                            switch (h = j.text(), this.opts.navbar.titleLink) {
                              case "anchor":
                                i = j.attr("href");
                                break;

                              case "parent":
                                i = "#" + k;
                            }
                            g.append('<a class="' + e.btn + " " + e.prev + '" href="#' + k + '" />');
                        } else if (!this.opts.navbar.title) return;
                        this.opts.navbar.add && b.addClass(e.hasnavbar), g.append('<a class="' + e.title + '"' + (i ? ' href="' + i + '"' : "") + ">" + h + "</a>").prependTo(b), 
                        this.trigger("initNavbar:after", b);
                    }
                },
                _initListview: function(b) {
                    this.trigger("initListview:before", b);
                    var c = this.__childAddBack(b, "ul, ol");
                    this.__refactorClass(c, this.conf.classNames.nolistview, "nolistview"), c.filter("." + this.conf.classNames.inset).addClass(e.nolistview);
                    var d = c.not("." + e.nolistview).addClass(e.listview).children();
                    this.__refactorClass(d, this.conf.classNames.selected, "selected"), this.__refactorClass(d, this.conf.classNames.divider, "divider"), 
                    this.__refactorClass(d, this.conf.classNames.spacer, "spacer");
                    var g = b.data(f.parent);
                    if (g && g.parent().is("." + e.listview) && !g.children("." + e.next).length) {
                        var h = g.children("a, span").first(), i = a('<a class="' + e.next + '" href="#' + b.attr("id") + '" />').insertBefore(h);
                        h.is("span") && i.addClass(e.fullsubopen);
                    }
                    this.trigger("initListview:after", b);
                },
                _initOpened: function() {
                    this.trigger("initOpened:before");
                    var a = this.$pnls.find("." + e.listview).children("." + e.selected).removeClass(e.selected).last().addClass(e.selected), b = a.length ? a.closest("." + e.panel) : this.$pnls.children("." + e.panel).first();
                    this.openPanel(b, !1), this.trigger("initOpened:after");
                },
                _initAnchors: function() {
                    var b = this;
                    h.$body.on(g.click + "-oncanvas", "a[href]", function(d) {
                        var f = a(this), g = !1, h = b.$menu.find(f).length;
                        for (var i in a[c].addons) if (a[c].addons[i].clickAnchor.call(b, f, h)) {
                            g = !0;
                            break;
                        }
                        var j = f.attr("href");
                        if (!g && h && j.length > 1 && "#" == j.slice(0, 1)) try {
                            var k = a(j, b.$menu);
                            k.is("." + e.panel) && (g = !0, b[f.parent().hasClass(e.vertical) ? "togglePanel" : "openPanel"](k));
                        } catch (a) {}
                        if (g && d.preventDefault(), !g && h && f.is("." + e.listview + " > li > a") && !f.is('[rel="external"]') && !f.is('[target="_blank"]')) {
                            b.__valueOrFn(b.opts.onClick.setSelected, f) && b.setSelected(a(d.target).parent());
                            var l = b.__valueOrFn(b.opts.onClick.preventDefault, f, "#" == j.slice(0, 1));
                            l && d.preventDefault(), b.__valueOrFn(b.opts.onClick.close, f, l) && b.close();
                        }
                    });
                },
                _initMatchMedia: function() {
                    var a = this;
                    this._fireMatchMedia(), h.$wndw.on(g.resize, function(b) {
                        a._fireMatchMedia();
                    });
                },
                _fireMatchMedia: function() {
                    for (var a in this.mtch) for (var b = window.matchMedia && window.matchMedia(a).matches ? "yes" : "no", c = 0; c < this.mtch[a].length; c++) this.mtch[a][c][b].call(this);
                },
                _getOriginalMenuId: function() {
                    var a = this.$menu.attr("id");
                    return this.conf.clone && a && a.length && (a = e.umm(a)), a;
                },
                __api: function() {
                    var b = this, c = {};
                    return a.each(this._api, function(a) {
                        var d = this;
                        c[d] = function() {
                            var a = b[d].apply(b, arguments);
                            return void 0 === a ? c : a;
                        };
                    }), c;
                },
                __valueOrFn: function(a, b, c) {
                    return "function" == typeof a ? a.call(b[0]) : void 0 === a && void 0 !== c ? c : a;
                },
                __refactorClass: function(a, b, c) {
                    return a.filter("." + b).removeClass(b).addClass(e[c]);
                },
                __findAddBack: function(a, b) {
                    return a.find(b).add(a.filter(b));
                },
                __childAddBack: function(a, b) {
                    return a.children(b).add(a.filter(b));
                },
                __filterListItems: function(a) {
                    return a.not("." + e.divider).not("." + e.hidden);
                },
                __filterListItemAnchors: function(a) {
                    return this.__filterListItems(a).children("a").not("." + e.next);
                },
                __transitionend: function(a, b, c) {
                    var d = !1, e = function(c) {
                        void 0 !== c && c.target != a[0] || (d || (a.unbind(g.transitionend), a.unbind(g.webkitTransitionEnd), 
                        b.call(a[0])), d = !0);
                    };
                    a.on(g.transitionend, e), a.on(g.webkitTransitionEnd, e), setTimeout(e, 1.1 * c);
                },
                __getUniqueId: function() {
                    return e.mm(a[c].uniqueId++);
                }
            }, a.fn[c] = function(d, e) {
                b(), d = a.extend(!0, {}, a[c].defaults, d), e = a.extend(!0, {}, a[c].configuration, e);
                var f = a();
                return this.each(function() {
                    var b = a(this);
                    if (!b.data(c)) {
                        var g = new a[c](b, d, e);
                        g.$menu.data(c, g.__api()), f = f.add(g.$menu);
                    }
                }), f;
            }, a[c].i18n = function() {
                var b = {};
                return function(c) {
                    switch (typeof c) {
                      case "object":
                        return a.extend(b, c), b;

                      case "string":
                        return b[c] || c;

                      case "undefined":
                      default:
                        return b;
                    }
                };
            }(), a[c].support = {
                touch: "ontouchstart" in window || navigator.msMaxTouchPoints || !1,
                csstransitions: function() {
                    return "undefined" == typeof Modernizr || void 0 === Modernizr.csstransitions || Modernizr.csstransitions;
                }(),
                csstransforms: function() {
                    return "undefined" == typeof Modernizr || void 0 === Modernizr.csstransforms || Modernizr.csstransforms;
                }(),
                csstransforms3d: function() {
                    return "undefined" == typeof Modernizr || void 0 === Modernizr.csstransforms3d || Modernizr.csstransforms3d;
                }()
            };
            var e, f, g, h;
        }
    }(a), function(a) {
        var b = "mmenu", c = "offCanvas";
        a[b].addons[c] = {
            setup: function() {
                if (this.opts[c]) {
                    var e = this, f = this.opts[c], h = this.conf[c];
                    g = a[b].glbl, this._api = a.merge(this._api, [ "open", "close", "setPage" ]), "object" != typeof f && (f = {}), 
                    "top" != f.position && "bottom" != f.position || (f.zposition = "front"), f = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], f), 
                    "string" != typeof h.pageSelector && (h.pageSelector = "> " + h.pageNodetype), g.$allMenus = (g.$allMenus || a()).add(this.$menu), 
                    this.vars.opened = !1;
                    var i = [ d.offcanvas ];
                    "left" != f.position && i.push(d.mm(f.position)), "back" != f.zposition && i.push(d.mm(f.zposition)), 
                    a[b].support.csstransforms || i.push(d["no-csstransforms"]), a[b].support.csstransforms3d || i.push(d["no-csstransforms3d"]), 
                    this.bind("initMenu:after", function() {
                        this.setPage(g.$page), this._initBlocker(), this["_initWindow_" + c](), this.$menu.addClass(i.join(" ")).parent("." + d.wrapper).removeClass(d.wrapper), 
                        this.$menu[h.menuInsertMethod](h.menuInsertSelector);
                        var a = window.location.hash;
                        if (a) {
                            var b = this._getOriginalMenuId();
                            b && b == a.slice(1) && this.open();
                        }
                    }), this.bind("initExtensions:after", function() {
                        for (var a = [ d.mm("widescreen"), d.mm("iconbar") ], b = 0; b < a.length; b++) for (var c in this.opts.extensions) if (this.opts.extensions[c].indexOf(a[b]) > -1) {
                            !function(b, c) {
                                e.matchMedia(b, function() {
                                    g.$html.addClass(a[c]);
                                }, function() {
                                    g.$html.removeClass(a[c]);
                                });
                            }(c, b);
                            break;
                        }
                    }), this.bind("open:start:sr-aria", function() {
                        this.__sr_aria(this.$menu, "hidden", !1);
                    }), this.bind("close:finish:sr-aria", function() {
                        this.__sr_aria(this.$menu, "hidden", !0);
                    }), this.bind("initMenu:after:sr-aria", function() {
                        this.__sr_aria(this.$menu, "hidden", !0);
                    });
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("offcanvas slideout blocking modal background opening blocker page no-csstransforms3d"), 
                e.add("style");
            },
            clickAnchor: function(a, b) {
                var e = this;
                if (this.opts[c]) {
                    var f = this._getOriginalMenuId();
                    if (f && a.is('[href="#' + f + '"]')) {
                        if (b) return !0;
                        var h = a.closest("." + d.menu);
                        if (h.length) {
                            var i = h.data("mmenu");
                            if (i && i.close) return i.close(), e.__transitionend(h, function() {
                                e.open();
                            }, e.conf.transitionDuration), !0;
                        }
                        return this.open(), !0;
                    }
                    if (g.$page) return f = g.$page.first().attr("id"), f && a.is('[href="#' + f + '"]') ? (this.close(), 
                    !0) : void 0;
                }
            }
        }, a[b].defaults[c] = {
            position: "left",
            zposition: "back",
            blockUI: !0,
            moveBackground: !0
        }, a[b].configuration[c] = {
            pageNodetype: "div",
            pageSelector: null,
            noPageSelector: [],
            wrapPageIfNeeded: !0,
            menuInsertMethod: "prependTo",
            menuInsertSelector: "body"
        }, a[b].prototype.open = function() {
            if (this.trigger("open:before"), !this.vars.opened) {
                var a = this;
                this._openSetup(), setTimeout(function() {
                    a._openFinish();
                }, this.conf.openingInterval), this.trigger("open:after");
            }
        }, a[b].prototype._openSetup = function() {
            var b = this, h = this.opts[c];
            this.closeAllOthers(), g.$page.each(function() {
                a(this).data(e.style, a(this).attr("style") || "");
            }), g.$wndw.trigger(f.resize + "-" + c, [ !0 ]);
            var i = [ d.opened ];
            h.blockUI && i.push(d.blocking), "modal" == h.blockUI && i.push(d.modal), h.moveBackground && i.push(d.background), 
            "left" != h.position && i.push(d.mm(this.opts[c].position)), "back" != h.zposition && i.push(d.mm(this.opts[c].zposition)), 
            g.$html.addClass(i.join(" ")), setTimeout(function() {
                b.vars.opened = !0;
            }, this.conf.openingInterval), this.$menu.addClass(d.opened);
        }, a[b].prototype._openFinish = function() {
            var a = this;
            this.__transitionend(g.$page.first(), function() {
                a.trigger("open:finish");
            }, this.conf.transitionDuration), this.trigger("open:start"), g.$html.addClass(d.opening);
        }, a[b].prototype.close = function() {
            if (this.trigger("close:before"), this.vars.opened) {
                var b = this;
                this.__transitionend(g.$page.first(), function() {
                    b.$menu.removeClass(d.opened);
                    var f = [ d.opened, d.blocking, d.modal, d.background, d.mm(b.opts[c].position), d.mm(b.opts[c].zposition) ];
                    g.$html.removeClass(f.join(" ")), g.$page.each(function() {
                        a(this).attr("style", a(this).data(e.style));
                    }), b.vars.opened = !1, b.trigger("close:finish");
                }, this.conf.transitionDuration), this.trigger("close:start"), g.$html.removeClass(d.opening), 
                this.trigger("close:after");
            }
        }, a[b].prototype.closeAllOthers = function() {
            g.$allMenus.not(this.$menu).each(function() {
                var c = a(this).data(b);
                c && c.close && c.close();
            });
        }, a[b].prototype.setPage = function(b) {
            this.trigger("setPage:before", b);
            var e = this, f = this.conf[c];
            b && b.length || (b = g.$body.find(f.pageSelector), f.noPageSelector.length && (b = b.not(f.noPageSelector.join(", "))), 
            b.length > 1 && f.wrapPageIfNeeded && (b = b.wrapAll("<" + this.conf[c].pageNodetype + " />").parent())), 
            b.each(function() {
                a(this).attr("id", a(this).attr("id") || e.__getUniqueId());
            }), b.addClass(d.page + " " + d.slideout), g.$page = b, this.trigger("setPage:after", b);
        }, a[b].prototype["_initWindow_" + c] = function() {
            g.$wndw.off(f.keydown + "-" + c).on(f.keydown + "-" + c, function(a) {
                if (g.$html.hasClass(d.opened) && 9 == a.keyCode) return a.preventDefault(), !1;
            });
            var a = 0;
            g.$wndw.off(f.resize + "-" + c).on(f.resize + "-" + c, function(b, c) {
                if (1 == g.$page.length && (c || g.$html.hasClass(d.opened))) {
                    var e = g.$wndw.height();
                    (c || e != a) && (a = e, g.$page.css("minHeight", e));
                }
            });
        }, a[b].prototype._initBlocker = function() {
            var b = this;
            this.opts[c].blockUI && (g.$blck || (g.$blck = a('<div id="' + d.blocker + '" class="' + d.slideout + '" />')), 
            g.$blck.appendTo(g.$body).off(f.touchstart + "-" + c + " " + f.touchmove + "-" + c).on(f.touchstart + "-" + c + " " + f.touchmove + "-" + c, function(a) {
                a.preventDefault(), a.stopPropagation(), g.$blck.trigger(f.mousedown + "-" + c);
            }).off(f.mousedown + "-" + c).on(f.mousedown + "-" + c, function(a) {
                a.preventDefault(), g.$html.hasClass(d.modal) || (b.closeAllOthers(), b.close());
            }));
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "scrollBugFix";
        a[b].addons[c] = {
            setup: function() {
                var e = this.opts[c];
                this.conf[c], g = a[b].glbl, a[b].support.touch && this.opts.offCanvas && this.opts.offCanvas.blockUI && ("boolean" == typeof e && (e = {
                    fix: e
                }), "object" != typeof e && (e = {}), e = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], e), 
                e.fix && (this.bind("open:start", function() {
                    this.$pnls.children("." + d.opened).scrollTop(0);
                }), this.bind("initMenu:after", function() {
                    this["_initWindow_" + c]();
                })));
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e;
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            fix: !0
        }, a[b].prototype["_initWindow_" + c] = function() {
            g.$docu.off(f.touchmove + "-" + c).on(f.touchmove + "-" + c, function(a) {
                g.$html.hasClass(d.opened) && a.preventDefault();
            });
            var b = !1;
            g.$body.off(f.touchstart + "-" + c).on(f.touchstart + "-" + c, "." + d.panels + "> ." + d.opened, function(a) {
                g.$html.hasClass(d.opened) && (b || (b = !0, 0 === a.currentTarget.scrollTop ? a.currentTarget.scrollTop = 1 : a.currentTarget.scrollHeight === a.currentTarget.scrollTop + a.currentTarget.offsetHeight && (a.currentTarget.scrollTop -= 1), 
                b = !1));
            }).off(f.touchmove + "-" + c).on(f.touchmove + "-" + c, "." + d.panels + "> ." + d.opened, function(b) {
                g.$html.hasClass(d.opened) && a(this)[0].scrollHeight > a(this).innerHeight() && b.stopPropagation();
            }), g.$wndw.off(f.orientationchange + "-" + c).on(f.orientationchange + "-" + c, function() {
                that.$pnls.children("." + d.opened).scrollTop(0).css({
                    "-webkit-overflow-scrolling": "auto"
                }).css({
                    "-webkit-overflow-scrolling": "touch"
                });
            });
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "screenReader";
        a[b].addons[c] = {
            setup: function() {
                var e = this, f = this.opts[c], h = this.conf[c];
                g = a[b].glbl, "boolean" == typeof f && (f = {
                    aria: f,
                    text: f
                }), "object" != typeof f && (f = {}), f = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], f), 
                f.aria && (this.bind("initAddons:after", function() {
                    this.bind("initMenu:after", function() {
                        this.trigger("initMenu:after:sr-aria");
                    }), this.bind("initNavbar:after", function() {
                        this.trigger("initNavbar:after:sr-aria", arguments[0]);
                    }), this.bind("openPanel:start", function() {
                        this.trigger("openPanel:start:sr-aria", arguments[0]);
                    }), this.bind("close:start", function() {
                        this.trigger("close:start:sr-aria");
                    }), this.bind("close:finish", function() {
                        this.trigger("close:finish:sr-aria");
                    }), this.bind("open:start", function() {
                        this.trigger("open:start:sr-aria");
                    }), this.bind("open:finish", function() {
                        this.trigger("open:finish:sr-aria");
                    });
                }), this.bind("updateListview", function() {
                    this.$pnls.find("." + d.listview).children().each(function() {
                        e.__sr_aria(a(this), "hidden", a(this).is("." + d.hidden));
                    });
                }), this.bind("openPanel:start", function(a) {
                    var b = this.$menu.find("." + d.panel).not(a).not(a.parents("." + d.panel)), c = a.add(a.find("." + d.vertical + "." + d.opened).children("." + d.panel));
                    this.__sr_aria(b, "hidden", !0), this.__sr_aria(c, "hidden", !1);
                }), this.bind("closePanel", function(a) {
                    this.__sr_aria(a, "hidden", !0);
                }), this.bind("initPanels:after", function(b) {
                    var c = b.find("." + d.prev + ", ." + d.next).each(function() {
                        e.__sr_aria(a(this), "owns", a(this).attr("href").replace("#", ""));
                    });
                    this.__sr_aria(c, "haspopup", !0);
                }), this.bind("initNavbar:after", function(a) {
                    var b = a.children("." + d.navbar);
                    this.__sr_aria(b, "hidden", !a.hasClass(d.hasnavbar));
                }), f.text && (this.bind("initlistview:after", function(a) {
                    var b = a.find("." + d.listview).find("." + d.fullsubopen).parent().children("span");
                    this.__sr_aria(b, "hidden", !0);
                }), "parent" == this.opts.navbar.titleLink && this.bind("initNavbar:after", function(a) {
                    var b = a.children("." + d.navbar), c = !!b.children("." + d.prev).length;
                    this.__sr_aria(b.children("." + d.title), "hidden", c);
                }))), f.text && (this.bind("initAddons:after", function() {
                    this.bind("setPage:after", function() {
                        this.trigger("setPage:after:sr-text", arguments[0]);
                    });
                }), this.bind("initNavbar:after", function(c) {
                    var e = c.children("." + d.navbar), f = e.children("." + d.title).text(), g = a[b].i18n(h.text.closeSubmenu);
                    f && (g += " (" + f + ")"), e.children("." + d.prev).html(this.__sr_text(g));
                }), this.bind("initlistview:after", function(c) {
                    c.find("." + d.listview).children("li").children("." + d.next).each(function() {
                        var c = a(this), f = $prev.nextAll("span, a").first().text(), g = a[b].i18n(h.text[$prev.parent().is("." + d.vertical) ? "toggleSubmenu" : "openSubmenu"]);
                        f && (g += " (" + f + ")"), c.html(e.__sr_text(g));
                    });
                }));
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("sronly");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            aria: !0,
            text: !0
        }, a[b].configuration[c] = {
            text: {
                closeMenu: "Close menu",
                closeSubmenu: "Close submenu",
                openSubmenu: "Open submenu",
                toggleSubmenu: "Toggle submenu"
            }
        }, a[b].prototype.__sr_aria = function(a, b, c) {
            a.prop("aria-" + b, c)[c ? "attr" : "removeAttr"]("aria-" + b, c);
        }, a[b].prototype.__sr_text = function(a) {
            return '<span class="' + d.sronly + '">' + a + "</span>";
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "autoHeight";
        a[b].addons[c] = {
            setup: function() {
                var e = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof e && e && (e = {
                    height: "auto"
                }), "string" == typeof e && (e = {
                    height: e
                }), "object" != typeof e && (e = {}), e = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], e), 
                "auto" == e.height || "highest" == e.height) {
                    this.bind("initMenu:after", function() {
                        this.$menu.addClass(d.autoheight);
                    });
                    var f = function(b) {
                        if (!this.opts.offCanvas || this.vars.opened) {
                            var c = Math.max(parseInt(this.$pnls.css("top"), 10), 0) || 0, f = Math.max(parseInt(this.$pnls.css("bottom"), 10), 0) || 0, g = 0;
                            this.$menu.addClass(d.measureheight), "auto" == e.height ? (b = b || this.$pnls.children("." + d.opened), 
                            b.is("." + d.vertical) && (b = b.parents("." + d.panel).not("." + d.vertical).first()), 
                            g = b.outerHeight()) : "highest" == e.height && this.$pnls.children().each(function() {
                                var b = a(this);
                                b.is("." + d.vertical) && (b = b.parents("." + d.panel).not("." + d.vertical).first()), 
                                g = Math.max(g, b.outerHeight());
                            }), this.$menu.height(g + c + f).removeClass(d.measureheight);
                        }
                    };
                    this.opts.offCanvas && this.bind("open:start", f), "highest" == e.height && this.bind("initPanels:after", f), 
                    "auto" == e.height && (this.bind("updateListview", f), this.bind("openPanel:start", f), 
                    this.bind("closePanel:finish", f));
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("autoheight measureheight"), f.add("resize");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            height: "default"
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "backButton";
        a[b].addons[c] = {
            setup: function() {
                if (this.opts.offCanvas) {
                    var e = this, f = this.opts[c];
                    if (this.conf[c], g = a[b].glbl, "boolean" == typeof f && (f = {
                        close: f
                    }), "object" != typeof f && (f = {}), f = a.extend(!0, {}, a[b].defaults[c], f), 
                    f.close) {
                        var h = "#" + e.$menu.attr("id");
                        this.bind("open:finish", function(a) {
                            location.hash != h && history.pushState(null, document.title, h);
                        }), a(window).on("popstate", function(a) {
                            g.$html.hasClass(d.opened) ? (a.stopPropagation(), e.close()) : location.hash == h && (a.stopPropagation(), 
                            e.open());
                        });
                    }
                }
            },
            add: function() {
                return window.history && window.history.pushState ? (d = a[b]._c, e = a[b]._d, void (f = a[b]._e)) : void (a[b].addons[c].setup = function() {});
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            close: !1
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "columns";
        a[b].addons[c] = {
            setup: function() {
                var e = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof e && (e = {
                    add: e
                }), "number" == typeof e && (e = {
                    add: !0,
                    visible: e
                }), "object" != typeof e && (e = {}), "number" == typeof e.visible && (e.visible = {
                    min: e.visible,
                    max: e.visible
                }), e = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], e), e.add) {
                    e.visible.min = Math.max(1, Math.min(6, e.visible.min)), e.visible.max = Math.max(e.visible.min, Math.min(6, e.visible.max));
                    for (var f = this.opts.offCanvas ? this.$menu.add(g.$html) : this.$menu, h = [], i = 0; i <= e.visible.max; i++) h.push(d.columns + "-" + i);
                    h = h.join(" ");
                    var j = function(a) {
                        var b = this.$pnls.children("." + d.subopened).length;
                        a && !a.hasClass(d.subopened) && b++, b = Math.min(e.visible.max, Math.max(e.visible.min, b)), 
                        f.removeClass(h).addClass(d.columns + "-" + b);
                    }, k = function() {
                        f.removeClass(h);
                    }, l = function(b) {
                        this.$pnls.children("." + d.panel).removeClass(h).filter("." + d.subopened).add(b).slice(-e.visible.max).each(function(b) {
                            a(this).addClass(d.columns + "-" + b);
                        });
                    };
                    this.bind("initMenu:after", function() {
                        this.$menu.addClass(d.columns);
                    }), this.bind("initPanels:after", function(a) {
                        l.call(this, this.$pnls.children("." + d.opened));
                    }), this.bind("open:start", j), this.bind("openPanel:start", j), this.bind("openPanel:start", l), 
                    this.bind("close:finish", k), this.opts.offCanvas || openMenu.call(this);
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("columns");
            },
            clickAnchor: function(b, e) {
                if (!this.opts[c].add) return !1;
                if (e) {
                    var f = b.attr("href");
                    if (f.length > 1 && "#" == f.slice(0, 1)) try {
                        if (a(f, this.$menu).is("." + d.panel)) for (var g = parseInt(b.closest("." + d.panel).attr("class").split(d.columns + "-")[1].split(" ")[0], 10) + 1; !1 !== g; ) {
                            var h = this.$pnls.children("." + d.columns + "-" + g);
                            if (!h.length) {
                                g = !1;
                                break;
                            }
                            g++, h.removeClass(d.subopened).removeClass(d.opened).removeClass(d.highest).addClass(d.hidden);
                        }
                    } catch (a) {}
                }
            }
        }, a[b].defaults[c] = {
            add: !1,
            visible: {
                min: 1,
                max: 3
            }
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "dividers";
        a[b].addons[c] = {
            setup: function() {
                var e = this, h = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof h && (h = {
                    add: h,
                    fixed: h
                }), "object" != typeof h && (h = {}), h = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], h), 
                this.bind("initListview:after", function(a) {
                    this.__refactorClass(a.find("li"), this.conf.classNames[c].collapsed, "collapsed");
                }), h.add && this.bind("initListview:after", function(b) {
                    var c;
                    switch (h.addTo) {
                      case "panels":
                        c = b;
                        break;

                      default:
                        c = b.filter(h.addTo);
                    }
                    c.length && c.find("." + d.listview).find("." + d.divider).remove().end().each(function() {
                        var b = "";
                        e.__filterListItems(a(this).children()).each(function() {
                            var c = a.trim(a(this).children("a, span").text()).slice(0, 1).toLowerCase();
                            c != b && c.length && (b = c, a('<li class="' + d.divider + '">' + c + "</li>").insertBefore(this));
                        });
                    });
                }), h.collapse && this.bind("initListview:after", function(b) {
                    b.find("." + d.divider).each(function() {
                        var b = a(this);
                        b.nextUntil("." + d.divider, "." + d.collapsed).length && (b.children("." + d.next).length || (b.wrapInner("<span />"), 
                        b.prepend('<a href="#" class="' + d.next + " " + d.fullsubopen + '" />')));
                    });
                }), h.fixed) {
                    this.bind("initPanels:after", function() {
                        void 0 === this.$fixeddivider && (this.$fixeddivider = a('<ul class="' + d.listview + " " + d.fixeddivider + '"><li class="' + d.divider + '"></li></ul>').prependTo(this.$pnls).children());
                    });
                    var i = function(b) {
                        if (b = b || this.$pnls.children("." + d.opened), !b.is(":hidden")) {
                            var c = b.children("." + d.listview).children("." + d.divider).not("." + d.hidden), e = b.scrollTop() || 0, f = "";
                            c.each(function() {
                                a(this).position().top + e < e + 1 && (f = a(this).text());
                            }), this.$fixeddivider.text(f), this.$pnls[f.length ? "addClass" : "removeClass"](d.hasdividers);
                        }
                    };
                    this.bind("open:start", i), this.bind("openPanel:start", i), this.bind("updateListview", i), 
                    this.bind("initPanel:after", function(a) {
                        a.off(f.scroll + "-" + c + " " + f.touchmove + "-" + c).on(f.scroll + "-" + c + " " + f.touchmove + "-" + c, function(b) {
                            i.call(e, a);
                        });
                    });
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("collapsed uncollapsed fixeddivider hasdividers"), 
                f.add("scroll");
            },
            clickAnchor: function(a, b) {
                if (this.opts[c].collapse && b) {
                    var e = a.parent();
                    if (e.is("." + d.divider)) {
                        var f = e.nextUntil("." + d.divider, "." + d.collapsed);
                        return e.toggleClass(d.opened), f[e.hasClass(d.opened) ? "addClass" : "removeClass"](d.uncollapsed), 
                        !0;
                    }
                }
                return !1;
            }
        }, a[b].defaults[c] = {
            add: !1,
            addTo: "panels",
            fixed: !1,
            collapse: !1
        }, a[b].configuration.classNames[c] = {
            collapsed: "Collapsed"
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "counters";
        a[b].addons[c] = {
            setup: function() {
                var f = this, h = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof h && (h = {
                    add: h,
                    update: h
                }), "object" != typeof h && (h = {}), h = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], h), 
                this.bind("initListview:after", function(b) {
                    this.__refactorClass(a("em", b), this.conf.classNames[c].counter, "counter");
                }), h.add && this.bind("initListview:after", function(b) {
                    var c;
                    switch (h.addTo) {
                      case "panels":
                        c = b;
                        break;

                      default:
                        c = b.filter(h.addTo);
                    }
                    c.each(function() {
                        var b = a(this).data(e.parent);
                        b && (b.children("em." + d.counter).length || b.prepend(a('<em class="' + d.counter + '" />')));
                    });
                }), h.update) {
                    var i = function(b) {
                        b = b || this.$pnls.children("." + d.panel), b.each(function() {
                            var b = a(this), c = b.data(e.parent);
                            if (c) {
                                var g = c.children("em." + d.counter);
                                g.length && (b = b.children("." + d.listview), b.length && g.html(f.__filterListItems(b.children()).length));
                            }
                        });
                    };
                    this.bind("initListview:after", i), this.bind("updateListview", i);
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("counter search noresultsmsg");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            add: !1,
            addTo: "panels",
            count: !1
        }, a[b].configuration.classNames[c] = {
            counter: "Counter"
        };
        var d, e, f, g;
    }(a), function(a) {
        function b(a, b, c) {
            return a < b && (a = b), a > c && (a = c), a;
        }
        function c(c, d, e) {
            var h, i, j, k, l, m = this, n = {}, o = 0, p = !1, q = !1, r = 0, s = 0;
            switch (this.opts.offCanvas.position) {
              case "left":
              case "right":
                n.events = "panleft panright", n.typeLower = "x", n.typeUpper = "X", q = "width";
                break;

              case "top":
              case "bottom":
                n.events = "panup pandown", n.typeLower = "y", n.typeUpper = "Y", q = "height";
            }
            switch (this.opts.offCanvas.position) {
              case "right":
              case "bottom":
                n.negative = !0, k = function(a) {
                    a >= e.$wndw[q]() - c.maxStartPos && (o = 1);
                };
                break;

              default:
                n.negative = !1, k = function(a) {
                    a <= c.maxStartPos && (o = 1);
                };
            }
            switch (this.opts.offCanvas.position) {
              case "left":
                n.open_dir = "right", n.close_dir = "left";
                break;

              case "right":
                n.open_dir = "left", n.close_dir = "right";
                break;

              case "top":
                n.open_dir = "down", n.close_dir = "up";
                break;

              case "bottom":
                n.open_dir = "up", n.close_dir = "down";
            }
            switch (this.opts.offCanvas.zposition) {
              case "front":
                l = function() {
                    return this.$menu;
                };
                break;

              default:
                l = function() {
                    return a("." + g.slideout);
                };
            }
            var t = this.__valueOrFn(c.node, this.$menu, e.$page);
            "string" == typeof t && (t = a(t)), new Hammer(t[0], this.opts[f].vendors.hammer).on("panstart", function(a) {
                k(a.center[n.typeLower]), e.$slideOutNodes = l(), p = n.open_dir;
            }).on(n.events + " panend", function(a) {
                o > 0 && a.preventDefault();
            }).on(n.events, function(a) {
                if (h = a["delta" + n.typeUpper], n.negative && (h = -h), h != r && (p = h >= r ? n.open_dir : n.close_dir), 
                (r = h) > c.threshold && 1 == o) {
                    if (e.$html.hasClass(g.opened)) return;
                    o = 2, m._openSetup(), m.trigger("open:start"), e.$html.addClass(g.dragging), s = b(e.$wndw[q]() * d[q].perc, d[q].min, d[q].max);
                }
                2 == o && (i = b(r, 10, s) - ("front" == m.opts.offCanvas.zposition ? s : 0), n.negative && (i = -i), 
                j = "translate" + n.typeUpper + "(" + i + "px )", e.$slideOutNodes.css({
                    "-webkit-transform": "-webkit-" + j,
                    transform: j
                }));
            }).on("panend", function(a) {
                2 == o && (e.$html.removeClass(g.dragging), e.$slideOutNodes.css("transform", ""), 
                m[p == n.open_dir ? "_openFinish" : "close"]()), o = 0;
            });
        }
        function d(a, b, c, d) {
            var e = this, i = a.data(h.parent);
            if (i) {
                i = i.closest("." + g.panel);
                var j = new Hammer(a[0], e.opts[f].vendors.hammer), k = null;
                j.on("panright", function(a) {
                    k || (e.openPanel(i), k = setTimeout(function() {
                        clearTimeout(k), k = null;
                    }, e.conf.openingInterval + e.conf.transitionDuration));
                });
            }
        }
        var e = "mmenu", f = "drag";
        a[e].addons[f] = {
            setup: function() {
                if (this.opts.offCanvas) {
                    var b = this.opts[f], g = this.conf[f];
                    j = a[e].glbl, "boolean" == typeof b && (b = {
                        menu: b,
                        panels: b
                    }), "object" != typeof b && (b = {}), "boolean" == typeof b.menu && (b.menu = {
                        open: b.menu
                    }), "object" != typeof b.menu && (b.menu = {}), "boolean" == typeof b.panels && (b.panels = {
                        close: b.panels
                    }), "object" != typeof b.panels && (b.panels = {}), b = this.opts[f] = a.extend(!0, {}, a[e].defaults[f], b), 
                    b.menu.open && this.bind("setPage:after", function() {
                        c.call(this, b.menu, g.menu, j);
                    }), b.panels.close && this.bind("initPanel:after", function(a) {
                        d.call(this, a, b.panels, g.panels, j);
                    });
                }
            },
            add: function() {
                return "function" != typeof Hammer || Hammer.VERSION < 2 ? (a[e].addons[f].add = function() {}, 
                void (a[e].addons[f].setup = function() {})) : (g = a[e]._c, h = a[e]._d, i = a[e]._e, 
                void g.add("dragging"));
            },
            clickAnchor: function(a, b) {}
        }, a[e].defaults[f] = {
            menu: {
                open: !1,
                maxStartPos: 100,
                threshold: 50
            },
            panels: {
                close: !1
            },
            vendors: {
                hammer: {}
            }
        }, a[e].configuration[f] = {
            menu: {
                width: {
                    perc: .8,
                    min: 140,
                    max: 440
                },
                height: {
                    perc: .8,
                    min: 140,
                    max: 880
                }
            },
            panels: {}
        };
        var g, h, i, j;
    }(a), function(a) {
        var b = "mmenu", c = "dropdown";
        a[b].addons[c] = {
            setup: function() {
                if (this.opts.offCanvas) {
                    var h = this, i = this.opts[c], j = this.conf[c];
                    if (g = a[b].glbl, "boolean" == typeof i && i && (i = {
                        drop: i
                    }), "object" != typeof i && (i = {}), "string" == typeof i.position && (i.position = {
                        of: i.position
                    }), i = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], i), i.drop) {
                        var k;
                        this.bind("initMenu:after", function() {
                            if (this.$menu.addClass(d.dropdown), i.tip && this.$menu.addClass(d.tip), "string" != typeof i.position.of) {
                                var b = this._getOriginalMenuId();
                                b && b.length && (i.position.of = '[href="#' + b + '"]');
                            }
                            "string" == typeof i.position.of && (k = a(i.position.of), i.event = i.event.split(" "), 
                            1 == i.event.length && (i.event[1] = i.event[0]), "hover" == i.event[0] && k.on(f.mouseenter + "-" + c, function() {
                                h.open();
                            }), "hover" == i.event[1] && this.$menu.on(f.mouseleave + "-" + c, function() {
                                h.close();
                            }));
                        }), this.bind("open:start", function() {
                            this.$menu.data(e.style, this.$menu.attr("style") || ""), g.$html.addClass(d.dropdown);
                        }), this.bind("close:finish", function() {
                            this.$menu.attr("style", this.$menu.data(e.style)), g.$html.removeClass(d.dropdown);
                        });
                        var l = function(a, b) {
                            var c = b[0], e = b[1], f = "x" == a ? "scrollLeft" : "scrollTop", h = "x" == a ? "outerWidth" : "outerHeight", l = "x" == a ? "left" : "top", m = "x" == a ? "right" : "bottom", n = "x" == a ? "width" : "height", o = "x" == a ? "maxWidth" : "maxHeight", p = null, q = g.$wndw[f](), r = k.offset()[l] -= q, s = r + k[h](), t = g.$wndw[n](), u = j.offset.button[a] + j.offset.viewport[a];
                            if (i.position[a]) switch (i.position[a]) {
                              case "left":
                              case "bottom":
                                p = "after";
                                break;

                              case "right":
                              case "top":
                                p = "before";
                            }
                            null === p && (p = r + (s - r) / 2 < t / 2 ? "after" : "before");
                            var v, w;
                            return "after" == p ? (v = "x" == a ? r : s, w = t - (v + u), c[l] = v + j.offset.button[a], 
                            c[m] = "auto", e.push(d["x" == a ? "tipleft" : "tiptop"])) : (v = "x" == a ? s : r, 
                            w = v - u, c[m] = "calc( 100% - " + (v - j.offset.button[a]) + "px )", c[l] = "auto", 
                            e.push(d["x" == a ? "tipright" : "tipbottom"])), c[o] = Math.min(j[n].max, w), [ c, e ];
                        }, m = function(a) {
                            if (this.vars.opened) {
                                this.$menu.attr("style", this.$menu.data(e.style));
                                var b = [ {}, [] ];
                                b = l.call(this, "y", b), b = l.call(this, "x", b), this.$menu.css(b[0]), i.tip && this.$menu.removeClass(d.tipleft + " " + d.tipright + " " + d.tiptop + " " + d.tipbottom).addClass(b[1].join(" "));
                            }
                        };
                        this.bind("open:start", m), g.$wndw.on(f.resize + "-" + c, function(a) {
                            m.call(h);
                        }), this.opts.offCanvas.blockUI || g.$wndw.on(f.scroll + "-" + c, function(a) {
                            m.call(h);
                        });
                    }
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("dropdown tip tipleft tipright tiptop tipbottom"), 
                f.add("mouseenter mouseleave resize scroll");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            drop: !1,
            event: "click",
            position: {},
            tip: !0
        }, a[b].configuration[c] = {
            offset: {
                button: {
                    x: -10,
                    y: 10
                },
                viewport: {
                    x: 20,
                    y: 20
                }
            },
            height: {
                max: 880
            },
            width: {
                max: 440
            }
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "fixedElements";
        a[b].addons[c] = {
            setup: function() {
                if (this.opts.offCanvas) {
                    var d = this.opts[c], e = this.conf[c];
                    g = a[b].glbl, d = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], d);
                    var f = function(a) {
                        var b = this.conf.classNames[c].fixed;
                        this.__refactorClass(a.find("." + b), b, "slideout")[e.elemInsertMethod](e.elemInsertSelector);
                    };
                    this.bind("setPage:after", f);
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("fixed");
            },
            clickAnchor: function(a, b) {}
        }, a[b].configuration[c] = {
            elemInsertMethod: "appendTo",
            elemInsertSelector: "body"
        }, a[b].configuration.classNames[c] = {
            fixed: "Fixed"
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "iconPanels";
        a[b].addons[c] = {
            setup: function() {
                var e = this, f = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof f && (f = {
                    add: f
                }), "number" == typeof f && (f = {
                    add: !0,
                    visible: f
                }), "object" != typeof f && (f = {}), f = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], f), 
                f.visible++, f.add) {
                    for (var h = [], i = 0; i <= f.visible; i++) h.push(d.iconpanel + "-" + i);
                    h = h.join(" ");
                    var j = function(b) {
                        b.hasClass(d.vertical) || e.$pnls.children("." + d.panel).removeClass(h).filter("." + d.subopened).removeClass(d.hidden).add(b).not("." + d.vertical).slice(-f.visible).each(function(b) {
                            a(this).addClass(d.iconpanel + "-" + b);
                        });
                    };
                    this.bind("initMenu:after", function() {
                        this.$menu.addClass(d.iconpanel);
                    }), this.bind("openPanel:start", j), this.bind("initPanels:after", function(a) {
                        j.call(e, e.$pnls.children("." + d.opened));
                    }), this.bind("initListview:after", function(a) {
                        a.hasClass(d.vertical) || a.children("." + d.subblocker).length || a.prepend('<a href="#' + a.closest("." + d.panel).attr("id") + '" class="' + d.subblocker + '" />');
                    });
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("iconpanel subblocker");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            add: !1,
            visible: 3
        };
        var d, e, f, g;
    }(a), function(a) {
        function b(b, c) {
            b = b || this.$pnls.children("." + f.opened);
            var d = a(), e = this.$menu.children("." + f.mm("navbars-top") + ", ." + f.mm("navbars-bottom")).children("." + f.navbar);
            e.find(j).filter(":focus").length || ("default" == c && (d = b.children("." + f.listview).find("a[href]").not("." + f.hidden), 
            d.length || (d = b.find(j).not("." + f.hidden)), d.length || (d = e.find(j).not("." + f.hidden))), 
            d.length || (d = this.$menu.children("." + f.tabstart)), d.first().focus());
        }
        function c(a) {
            a || (a = this.$pnls.children("." + f.opened)), this.$pnls.children("." + f.panel).not(a).find(j).attr("tabindex", -1), 
            a.find(j).attr("tabindex", 0), a.find("." + f.mm("toggle") + ", ." + f.mm("check")).attr("tabindex", -1), 
            a.children("." + f.navbar).children("." + f.title).attr("tabindex", -1);
        }
        var d = "mmenu", e = "keyboardNavigation";
        a[d].addons[e] = {
            setup: function() {
                var g = this.opts[e];
                if (this.conf[e], i = a[d].glbl, "boolean" != typeof g && "string" != typeof g || (g = {
                    enable: g
                }), "object" != typeof g && (g = {}), g = this.opts[e] = a.extend(!0, {}, a[d].defaults[e], g), 
                g.enable) {
                    var h = a('<button class="' + f.tabstart + '" tabindex="0" type="button" />'), j = a('<button class="' + f.tabend + '" tabindex="0" type="button" />');
                    this.bind("initMenu:after", function() {
                        g.enhance && this.$menu.addClass(f.keyboardfocus), this["_initWindow_" + e](g.enhance);
                    }), this.bind("initOpened:before", function() {
                        this.$menu.prepend(h).append(j).children("." + f.mm("navbars-top") + ", ." + f.mm("navbars-bottom")).children("." + f.navbar).children("a." + f.title).attr("tabindex", -1);
                    }), this.bind("open:start", function() {
                        c.call(this);
                    }), this.bind("open:finish", function() {
                        b.call(this, null, g.enable);
                    }), this.bind("openPanel:start", function(a) {
                        c.call(this, a);
                    }), this.bind("openPanel:finish", function(a) {
                        b.call(this, a, g.enable);
                    }), this.bind("initOpened:after", function() {
                        this.__sr_aria(this.$menu.children("." + f.mm("tabstart") + ", ." + f.mm("tabend")), "hidden", !0);
                    });
                }
            },
            add: function() {
                f = a[d]._c, g = a[d]._d, h = a[d]._e, f.add("tabstart tabend keyboardfocus"), h.add("focusin keydown");
            },
            clickAnchor: function(a, b) {}
        }, a[d].defaults[e] = {
            enable: !1,
            enhance: !1
        }, a[d].configuration[e] = {}, a[d].prototype["_initWindow_" + e] = function(b) {
            i.$wndw.off(h.keydown + "-offCanvas"), i.$wndw.off(h.focusin + "-" + e).on(h.focusin + "-" + e, function(b) {
                if (i.$html.hasClass(f.opened)) {
                    var c = a(b.target);
                    c.is("." + f.tabend) && c.parent().find("." + f.tabstart).focus();
                }
            }), i.$wndw.off(h.keydown + "-" + e).on(h.keydown + "-" + e, function(b) {
                var c = a(b.target), d = c.closest("." + f.menu);
                if (d.length) if (d.data("mmenu"), c.is("input, textarea")) ; else switch (b.keyCode) {
                  case 13:
                    (c.is(".mm-toggle") || c.is(".mm-check")) && c.trigger(h.click);
                    break;

                  case 32:
                  case 37:
                  case 38:
                  case 39:
                  case 40:
                    b.preventDefault();
                }
            }), b && i.$wndw.off(h.keydown + "-" + e).on(h.keydown + "-" + e, function(b) {
                var c = a(b.target), d = c.closest("." + f.menu);
                if (d.length) {
                    var e = d.data("mmenu");
                    if (c.is("input, textarea")) switch (b.keyCode) {
                      case 27:
                        c.val("");
                    } else switch (b.keyCode) {
                      case 8:
                        var h = c.closest("." + f.panel).data(g.parent);
                        h && h.length && e.openPanel(h.closest("." + f.panel));
                        break;

                      case 27:
                        d.hasClass(f.offcanvas) && e.close();
                    }
                }
            });
        };
        var f, g, h, i, j = "input, select, textarea, button, label, a[href]";
    }(a), function(a) {
        var b = "mmenu", c = "lazySubmenus";
        a[b].addons[c] = {
            setup: function() {
                var e = this.opts[c];
                this.conf[c], g = a[b].glbl, "boolean" == typeof e && (e = {
                    load: e
                }), "object" != typeof e && (e = {}), e = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], e), 
                e.load && (this.bind("initMenu:after", function() {
                    this.$pnls.find("li").children(this.conf.panelNodetype).not("." + d.inset).not("." + d.nolistview).not("." + d.nopanel).addClass(d.lazysubmenu + " " + d.nolistview + " " + d.nopanel);
                }), this.bind("initPanels:before", function(a) {
                    a = a || this.$pnls.children(this.conf.panelNodetype), this.__findAddBack(a, "." + d.lazysubmenu).not("." + d.lazysubmenu + " ." + d.lazysubmenu).removeClass(d.lazysubmenu + " " + d.nolistview + " " + d.nopanel);
                }), this.bind("initOpened:before", function() {
                    var a = this.$pnls.find("." + this.conf.classNames.selected).closest("." + d.lazysubmenu);
                    a.length && this.initPanels(a);
                }), this.bind("openPanel:before", function(a) {
                    $panels = this.__findAddBack(a, "." + d.lazysubmenu).not("." + d.lazysubmenu + " ." + d.lazysubmenu), 
                    $panels.length && this.initPanels($panels);
                }));
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("lazysubmenu"), e.add("lazysubmenu");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            load: !1
        }, a[b].configuration[c] = {};
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "navbars";
        a[b].addons[c] = {
            setup: function() {
                var e = this, f = this.opts[c], h = this.conf[c];
                if (g = a[b].glbl, void 0 !== f) {
                    f instanceof Array || (f = [ f ]);
                    var i = {}, j = {};
                    f.length && (a.each(f, function(g) {
                        var k = f[g];
                        "boolean" == typeof k && k && (k = {}), "object" != typeof k && (k = {}), void 0 === k.content && (k.content = [ "prev", "title" ]), 
                        k.content instanceof Array || (k.content = [ k.content ]), k = a.extend(!0, {}, e.opts.navbar, k);
                        var l = a('<div class="' + d.navbar + '" />'), m = k.height;
                        "number" != typeof m && (m = 1), m = Math.min(4, Math.max(1, m)), l.addClass(d.navbar + "-size-" + m);
                        var n = k.position;
                        "bottom" != n && (n = "top"), i[n] || (i[n] = 0), i[n] += m, j[n] || (j[n] = a('<div class="' + d.navbars + "-" + n + '" />')), 
                        j[n].append(l);
                        for (var o = 0, p = 0, q = k.content.length; p < q; p++) {
                            var r = a[b].addons[c][k.content[p]] || !1;
                            r ? o += r.call(e, l, k, h) : (r = k.content[p], r instanceof a || (r = a(k.content[p])), 
                            l.append(r));
                        }
                        o += Math.ceil(l.children().not("." + d.btn).length / m), o > 1 && l.addClass(d.navbar + "-content-" + o), 
                        l.children("." + d.btn).length && l.addClass(d.hasbtns);
                    }), this.bind("initMenu:after", function() {
                        for (var a in i) this.$menu.addClass(d.hasnavbar + "-" + a + "-" + i[a]), this.$menu["bottom" == a ? "append" : "prepend"](j[a]);
                    }));
                }
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("navbars close hasbtns");
            },
            clickAnchor: function(a, b) {}
        }, a[b].configuration[c] = {
            breadcrumbSeparator: "/"
        }, a[b].configuration.classNames[c] = {};
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu";
        a[b].addons.navbars.breadcrumbs = function(c, d, e) {
            var f = this, g = a[b]._c, h = a[b]._d;
            g.add("breadcrumbs separator");
            var i = a('<span class="' + g.breadcrumbs + '" />').appendTo(c);
            return this.bind("initNavbar:after", function(b) {
                b.removeClass(g.hasnavbar);
                for (var c = [], d = a('<span class="' + g.breadcrumbs + '"></span>'), f = b, i = !0; f && f.length; ) {
                    if (f.is("." + g.panel) || (f = f.closest("." + g.panel)), !f.hasClass(g.vertical)) {
                        var j = f.children("." + g.navbar).children("." + g.title).text();
                        c.unshift(i ? "<span>" + j + "</span>" : '<a href="#' + f.attr("id") + '">' + j + "</a>"), 
                        i = !1;
                    }
                    f = f.data(h.parent);
                }
                d.append(c.join('<span class="' + g.separator + '">' + e.breadcrumbSeparator + "</span>")).appendTo(b.children("." + g.navbar));
            }), this.bind("openPanel:start", function(a) {
                i.html(a.children("." + g.navbar).children("." + g.breadcrumbs).html() || "");
            }), this.bind("initNavbar:after:sr-aria", function(b) {
                b.children("." + g.navbar).children("." + g.breadcrumbs).children("a").each(function() {
                    f.__sr_aria(a(this), "owns", a(this).attr("href").slice(1));
                });
            }), 0;
        };
    }(a), function(a) {
        var b = "mmenu";
        a[b].addons.navbars.close = function(c, d) {
            var e = a[b]._c, f = (a[b].glbl, a('<a class="' + e.close + " " + e.btn + '" href="#" />').appendTo(c));
            return this.bind("setPage:after", function(a) {
                f.attr("href", "#" + a.attr("id"));
            }), this.bind("setPage:after:sr-text", function(c) {
                f.html(this.__sr_text(a[b].i18n(this.conf.screenReader.text.closeMenu))), this.__sr_aria(f, "owns", f.attr("href").slice(1));
            }), -1;
        };
    }(a), function(a) {
        var b = "mmenu", c = "navbars";
        a[b].addons[c].next = function(d, e) {
            var f, g, h, i = a[b]._c, j = a('<a class="' + i.next + " " + i.btn + '" href="#" />').appendTo(d);
            return this.bind("openPanel:start", function(a) {
                f = a.find("." + this.conf.classNames[c].panelNext), g = f.attr("href"), h = f.html(), 
                j[g ? "attr" : "removeAttr"]("href", g), j[g || h ? "removeClass" : "addClass"](i.hidden), 
                j.html(h);
            }), this.bind("openPanel:start:sr-aria", function(a) {
                this.__sr_aria(j, "hidden", j.hasClass(i.hidden)), this.__sr_aria(j, "owns", (j.attr("href") || "").slice(1));
            }), -1;
        }, a[b].configuration.classNames[c].panelNext = "Next";
    }(a), function(a) {
        var b = "mmenu", c = "navbars";
        a[b].addons[c].prev = function(d, e) {
            var f = a[b]._c, g = a('<a class="' + f.prev + " " + f.btn + '" href="#" />').appendTo(d);
            this.bind("initNavbar:after", function(a) {
                a.removeClass(f.hasnavbar);
            });
            var h, i, j;
            return this.bind("openPanel:start", function(a) {
                a.hasClass(f.vertical) || (h = a.find("." + this.conf.classNames[c].panelPrev), 
                h.length || (h = a.children("." + f.navbar).children("." + f.prev)), i = h.attr("href"), 
                j = h.html(), g[i ? "attr" : "removeAttr"]("href", i), g[i || j ? "removeClass" : "addClass"](f.hidden), 
                g.html(j));
            }), this.bind("initNavbar:after:sr-aria", function(a) {
                var b = a.children("." + f.navbar);
                this.__sr_aria(b, "hidden", !0);
            }), this.bind("openPanel:start:sr-aria", function(a) {
                this.__sr_aria(g, "hidden", g.hasClass(f.hidden)), this.__sr_aria(g, "owns", (g.attr("href") || "").slice(1));
            }), -1;
        }, a[b].configuration.classNames[c].panelPrev = "Prev";
    }(a), function(a) {
        var b = "mmenu";
        a[b].addons.navbars.searchfield = function(c, d) {
            var e = a[b]._c, f = a('<div class="' + e.search + '" />').appendTo(c);
            return "object" != typeof this.opts.searchfield && (this.opts.searchfield = {}), 
            this.opts.searchfield.add = !0, this.opts.searchfield.addTo = f, 0;
        };
    }(a), function(a) {
        var b = "mmenu", c = "navbars";
        a[b].addons[c].title = function(d, e) {
            var f, g, h, i = a[b]._c, j = a('<a class="' + i.title + '" />').appendTo(d);
            this.bind("openPanel:start", function(a) {
                a.hasClass(i.vertical) || (h = a.find("." + this.conf.classNames[c].panelTitle), 
                h.length || (h = a.children("." + i.navbar).children("." + i.title)), f = h.attr("href"), 
                g = h.html() || e.title, j[f ? "attr" : "removeAttr"]("href", f), j[f || g ? "removeClass" : "addClass"](i.hidden), 
                j.html(g));
            });
            var k;
            return this.bind("openPanel:start:sr-aria", function(a) {
                if (this.opts.screenReader.text && (k || (k = this.$menu.children("." + i.navbars + "-top, ." + i.navbars + "-bottom").children("." + i.navbar).children("." + i.prev)), 
                k.length)) {
                    var b = !0;
                    "parent" == this.opts.navbar.titleLink && (b = !k.hasClass(i.hidden)), this.__sr_aria(j, "hidden", b);
                }
            }), 0;
        }, a[b].configuration.classNames[c].panelTitle = "Title";
    }(a), function(a) {
        function b(a) {
            j && j.length && j.is(":visible") && i.$html.add(i.$body).animate({
                scrollTop: j.offset().top + a
            }), j = !1;
        }
        function c(a) {
            try {
                return !("#" == a || "#" != a.slice(0, 1) || !i.$page.find(a).length);
            } catch (a) {
                return !1;
            }
        }
        var d = "mmenu", e = "pageScroll";
        a[d].addons[e] = {
            setup: function() {
                var g = this, j = this.opts[e], k = this.conf[e];
                if (i = a[d].glbl, "boolean" == typeof j && (j = {
                    scroll: j
                }), j = this.opts[e] = a.extend(!0, {}, a[d].defaults[e], j), j.scroll && this.bind("close:finish", function() {
                    b(k.scrollOffset);
                }), j.update) {
                    var g = this, l = [], m = [];
                    g.bind("initListview:after", function(b) {
                        g.__filterListItemAnchors(b.find("." + f.listview).children("li")).each(function() {
                            var b = a(this).attr("href");
                            c(b) && l.push(b);
                        }), m = l.reverse();
                    });
                    var n = -1;
                    i.$wndw.on(h.scroll + "-" + e, function(b) {
                        for (var c = i.$wndw.scrollTop(), d = 0; d < m.length; d++) if (a(m[d]).offset().top < c + k.updateOffset) {
                            n !== d && (n = d, g.setSelected(g.__filterListItemAnchors(g.$pnls.children("." + f.opened).find("." + f.listview).children("li")).filter('[href="' + m[d] + '"]').parent()));
                            break;
                        }
                    });
                }
            },
            add: function() {
                f = a[d]._c, g = a[d]._d, h = a[d]._e;
            },
            clickAnchor: function(d, g) {
                if (j = !1, g && this.opts[e].scroll && this.opts.offCanvas && i.$page && i.$page.length) {
                    var h = d.attr("href");
                    c(h) && (j = a(h), i.$html.hasClass(f.mm("widescreen")) && b(this.conf[e].scrollOffset));
                }
            }
        }, a[d].defaults[e] = {
            scroll: !1,
            update: !1
        }, a[d].configuration[e] = {
            scrollOffset: 0,
            updateOffset: 50
        };
        var f, g, h, i, j = !1;
    }(a), function(a) {
        var b = "mmenu", c = "rtl";
        a[b].addons[c] = {
            setup: function() {
                var e = this.opts[c];
                this.conf[c], g = a[b].glbl, "object" != typeof e && (e = {
                    use: e
                }), e = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], e), "boolean" != typeof e.use && (e.use = "rtl" == (g.$html.attr("dir") || "").toLowerCase()), 
                e.use && this.bind("initMenu:after", function() {
                    this.$menu.addClass(d.rtl);
                });
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("rtl");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            use: "detect"
        };
        var d, e, f, g;
    }(a), function(a) {
        function b(a) {
            switch (a) {
              case 9:
              case 16:
              case 17:
              case 18:
              case 37:
              case 38:
              case 39:
              case 40:
                return !0;
            }
            return !1;
        }
        var c = "mmenu", d = "searchfield";
        a[c].addons[d] = {
            setup: function() {
                var i = this, j = this.opts[d], k = this.conf[d];
                h = a[c].glbl, "boolean" == typeof j && (j = {
                    add: j
                }), "object" != typeof j && (j = {}), "boolean" == typeof j.resultsPanel && (j.resultsPanel = {
                    add: j.resultsPanel
                }), j = this.opts[d] = a.extend(!0, {}, a[c].defaults[d], j), k = this.conf[d] = a.extend(!0, {}, a[c].configuration[d], k), 
                this.bind("close:start", function() {
                    this.$menu.find("." + e.search).find("input").blur();
                }), this.bind("initPanels:after", function(h) {
                    if (j.add) {
                        var l;
                        switch (j.addTo) {
                          case "panels":
                            l = h;
                            break;

                          default:
                            l = this.$menu.find(j.addTo);
                        }
                        if (l.each(function() {
                            var b = a(this);
                            if (!b.is("." + e.panel) || !b.is("." + e.vertical)) {
                                if (!b.children("." + e.search).length) {
                                    var d = i.__valueOrFn(k.clear, b), f = i.__valueOrFn(k.form, b), h = i.__valueOrFn(k.input, b), l = i.__valueOrFn(k.submit, b), m = a("<" + (f ? "form" : "div") + ' class="' + e.search + '" />'), n = a('<input placeholder="' + a[c].i18n(j.placeholder) + '" type="text" autocomplete="off" />');
                                    m.append(n);
                                    var o;
                                    if (h) for (o in h) n.attr(o, h[o]);
                                    if (d && a('<a class="' + e.btn + " " + e.clear + '" href="#" />').appendTo(m).on(g.click + "-searchfield", function(a) {
                                        a.preventDefault(), n.val("").trigger(g.keyup + "-searchfield");
                                    }), f) {
                                        for (o in f) m.attr(o, f[o]);
                                        l && !d && a('<a class="' + e.btn + " " + e.next + '" href="#" />').appendTo(m).on(g.click + "-searchfield", function(a) {
                                            a.preventDefault(), m.submit();
                                        });
                                    }
                                    b.hasClass(e.search) ? b.replaceWith(m) : b.prepend(m).addClass(e.hassearch);
                                }
                                if (j.noResults) {
                                    if (b.closest("." + e.panel).length || (b = i.$pnls.children("." + e.panel).first()), 
                                    !b.children("." + e.noresultsmsg).length) {
                                        var p = b.children("." + e.listview).first();
                                        a('<div class="' + e.noresultsmsg + " " + e.hidden + '" />').append(a[c].i18n(j.noResults))[p.length ? "insertAfter" : "prependTo"](p.length ? p : b);
                                    }
                                }
                            }
                        }), j.search) {
                            if (j.resultsPanel.add) {
                                j.showSubPanels = !1;
                                var m = this.$pnls.children("." + e.resultspanel);
                                m.length || (m = a('<div class="' + e.panel + " " + e.resultspanel + " " + e.noanimation + " " + e.hidden + '" />').appendTo(this.$pnls).append('<div class="' + e.navbar + " " + e.hidden + '"><a class="' + e.title + '">' + a[c].i18n(j.resultsPanel.title) + "</a></div>").append('<ul class="' + e.listview + '" />').append(this.$pnls.find("." + e.noresultsmsg).first().clone()), 
                                this.initPanels(m));
                            }
                            this.$menu.find("." + e.search).each(function() {
                                var c, h, k = a(this), l = k.closest("." + e.panel).length;
                                l ? (c = k.closest("." + e.panel), h = c) : (c = a("." + e.panel, i.$menu), h = i.$menu), 
                                j.resultsPanel.add && (c = c.not(m));
                                var n = k.children("input"), o = i.__findAddBack(c, "." + e.listview).children("li"), p = o.filter("." + e.divider), q = i.__filterListItems(o), r = "", s = function() {
                                    var b = n.val().toLowerCase();
                                    if (b != r) {
                                        if (r = b, j.resultsPanel.add && m.children("." + e.listview).empty(), c.scrollTop(0), 
                                        q.add(p).addClass(e.hidden).find("." + e.fullsubopensearch).removeClass(e.fullsubopen + " " + e.fullsubopensearch), 
                                        q.each(function() {
                                            var b = a(this), c = "a";
                                            (j.showTextItems || j.showSubPanels && b.find("." + e.next)) && (c = "a, span"), 
                                            (b.data(f.searchtext) || b.children(c).text()).toLowerCase().indexOf(r) > -1 && b.add(b.prevAll("." + e.divider).first()).removeClass(e.hidden);
                                        }), j.showSubPanels && c.each(function(b) {
                                            var c = a(this);
                                            i.__filterListItems(c.find("." + e.listview).children()).each(function() {
                                                var b = a(this), c = b.data(f.child);
                                                b.removeClass(e.nosubresults), c && c.find("." + e.listview).children().removeClass(e.hidden);
                                            });
                                        }), j.resultsPanel.add) if ("" === r) this.closeAllPanels(), this.openPanel(this.$pnls.children("." + e.subopened).last()); else {
                                            var d = a();
                                            c.each(function() {
                                                var b = i.__filterListItems(a(this).find("." + e.listview).children()).not("." + e.hidden).clone(!0);
                                                b.length && (j.resultsPanel.dividers && (d = d.add('<li class="' + e.divider + '">' + a(this).children("." + e.navbar).children("." + e.title).text() + "</li>")), 
                                                d = d.add(b));
                                            }), d.find("." + e.next).remove(), m.children("." + e.listview).append(d), this.openPanel(m);
                                        } else a(c.get().reverse()).each(function(b) {
                                            var c = a(this), d = c.data(f.parent);
                                            d && (i.__filterListItems(c.find("." + e.listview).children()).length ? (d.hasClass(e.hidden) && d.children("." + e.next).not("." + e.fullsubopen).addClass(e.fullsubopen).addClass(e.fullsubopensearch), 
                                            d.removeClass(e.hidden).removeClass(e.nosubresults).prevAll("." + e.divider).first().removeClass(e.hidden)) : l || (c.hasClass(e.opened) && setTimeout(function() {
                                                i.openPanel(d.closest("." + e.panel));
                                            }, (b + 1) * (1.5 * i.conf.openingInterval)), d.addClass(e.nosubresults)));
                                        });
                                        h.find("." + e.noresultsmsg)[q.not("." + e.hidden).length ? "addClass" : "removeClass"](e.hidden), 
                                        this.trigger("updateListview");
                                    }
                                };
                                n.off(g.keyup + "-" + d + " " + g.change + "-" + d).on(g.keyup + "-" + d, function(a) {
                                    b(a.keyCode) || s.call(i);
                                }).on(g.change + "-" + d, function(a) {
                                    s.call(i);
                                });
                                var t = k.children("." + e.btn);
                                t.length && n.on(g.keyup + "-" + d, function(a) {
                                    t[n.val().length ? "removeClass" : "addClass"](e.hidden);
                                }), n.trigger(g.keyup + "-" + d);
                            });
                        }
                    }
                });
            },
            add: function() {
                e = a[c]._c, f = a[c]._d, g = a[c]._e, e.add("clear search hassearch resultspanel noresultsmsg noresults nosubresults fullsubopensearch"), 
                f.add("searchtext"), g.add("change keyup");
            },
            clickAnchor: function(a, b) {}
        }, a[c].defaults[d] = {
            add: !1,
            addTo: "panels",
            placeholder: "Search",
            noResults: "No results found.",
            resultsPanel: {
                add: !1,
                dividers: !0,
                title: "Search results"
            },
            search: !0,
            showTextItems: !1,
            showSubPanels: !0
        }, a[c].configuration[d] = {
            clear: !1,
            form: !1,
            input: !1,
            submit: !1
        };
        var e, f, g, h;
    }(a), function(a) {
        var b = "mmenu", c = "sectionIndexer";
        a[b].addons[c] = {
            setup: function() {
                var e = this, h = this.opts[c];
                this.conf[c], g = a[b].glbl, "boolean" == typeof h && (h = {
                    add: h
                }), "object" != typeof h && (h = {}), h = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], h), 
                this.bind("initPanels:after", function(b) {
                    if (h.add) {
                        var g;
                        switch (h.addTo) {
                          case "panels":
                            g = b;
                            break;

                          default:
                            g = a(h.addTo, this.$menu).filter("." + d.panel);
                        }
                        g.find("." + d.divider).closest("." + d.panel).addClass(d.hasindexer), this.$indexer || (this.$indexer = a('<div class="' + d.indexer + '" />').prependTo(this.$pnls).append('<a href="#a">a</a><a href="#b">b</a><a href="#c">c</a><a href="#d">d</a><a href="#e">e</a><a href="#f">f</a><a href="#g">g</a><a href="#h">h</a><a href="#i">i</a><a href="#j">j</a><a href="#k">k</a><a href="#l">l</a><a href="#m">m</a><a href="#n">n</a><a href="#o">o</a><a href="#p">p</a><a href="#q">q</a><a href="#r">r</a><a href="#s">s</a><a href="#t">t</a><a href="#u">u</a><a href="#v">v</a><a href="#w">w</a><a href="#x">x</a><a href="#y">y</a><a href="#z">z</a>'), 
                        this.$indexer.children().on(f.mouseover + "-" + c + " " + d.touchstart + "-" + c, function(b) {
                            var c = a(this).attr("href").slice(1), f = e.$pnls.children("." + d.opened), g = f.find("." + d.listview), h = !1, i = f.scrollTop();
                            f.scrollTop(0), g.children("." + d.divider).not("." + d.hidden).each(function() {
                                !1 === h && c == a(this).text().slice(0, 1).toLowerCase() && (h = a(this).position().top);
                            }), f.scrollTop(!1 !== h ? h : i);
                        }));
                        var i = function(a) {
                            a = a || this.$pnls.children("." + d.opened), this.$menu[(a.hasClass(d.hasindexer) ? "add" : "remove") + "Class"](d.hasindexer);
                        };
                        this.bind("openPanel:start", i), this.bind("initPanels:after", i);
                    }
                });
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("indexer hasindexer"), f.add("mouseover touchstart");
            },
            clickAnchor: function(a, b) {
                if (a.parent().is("." + d.indexer)) return !0;
            }
        }, a[b].defaults[c] = {
            add: !1,
            addTo: "panels"
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "setSelected";
        a[b].addons[c] = {
            setup: function() {
                var f = this, h = this.opts[c];
                if (this.conf[c], g = a[b].glbl, "boolean" == typeof h && (h = {
                    hover: h,
                    parent: h
                }), "object" != typeof h && (h = {}), h = this.opts[c] = a.extend(!0, {}, a[b].defaults[c], h), 
                "detect" == h.current) {
                    var i = function(a) {
                        a = a.split("?")[0].split("#")[0];
                        var b = f.$menu.find('a[href="' + a + '"], a[href="' + a + '/"]');
                        b.length ? f.setSelected(b.parent(), !0) : (a = a.split("/").slice(0, -1), a.length && i(a.join("/")));
                    };
                    this.bind("initMenu:after", function() {
                        i(window.location.href);
                    });
                } else h.current || this.bind("initListview:after", function(a) {
                    $panels.find("." + d.listview).children("." + d.selected).removeClass(d.selected);
                });
                h.hover && this.bind("initMenu:after", function() {
                    this.$menu.addClass(d.hoverselected);
                }), h.parent && (this.bind("openPanel:finish", function(a) {
                    this.$pnls.find("." + d.listview).find("." + d.next).removeClass(d.selected);
                    for (var b = a.data(e.parent); b; ) b.not("." + d.vertical).children("." + d.next).addClass(d.selected), 
                    b = b.closest("." + d.panel).data(e.parent);
                }), this.bind("initMenu:after", function() {
                    this.$menu.addClass(d.parentselected);
                }));
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("hoverselected parentselected");
            },
            clickAnchor: function(a, b) {}
        }, a[b].defaults[c] = {
            current: !0,
            hover: !1,
            parent: !1
        };
        var d, e, f, g;
    }(a), function(a) {
        var b = "mmenu", c = "toggles";
        a[b].addons[c] = {
            setup: function() {
                var e = this;
                this.opts[c], this.conf[c], g = a[b].glbl, this.bind("initListview:after", function(b) {
                    this.__refactorClass(b.find("input"), this.conf.classNames[c].toggle, "toggle"), 
                    this.__refactorClass(b.find("input"), this.conf.classNames[c].check, "check"), b.find("input." + d.toggle + ", input." + d.check).each(function() {
                        var b = a(this), c = b.closest("li"), f = b.hasClass(d.toggle) ? "toggle" : "check", g = b.attr("id") || e.__getUniqueId();
                        c.children('label[for="' + g + '"]').length || (b.attr("id", g), c.prepend(b), a('<label for="' + g + '" class="' + d[f] + '"></label>').insertBefore(c.children("a, span").last()));
                    });
                });
            },
            add: function() {
                d = a[b]._c, e = a[b]._d, f = a[b]._e, d.add("toggle check");
            },
            clickAnchor: function(a, b) {}
        }, a[b].configuration.classNames[c] = {
            toggle: "Toggle",
            check: "Check"
        };
        var d, e, f, g;
    }(a), !0;
});